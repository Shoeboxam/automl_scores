{
    "datasetIndices": {},
    "datasetPaths": {
        "all": "/ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv",
        "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv",
        "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv",
        "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
    },
    "datasetPathsManipulated": {},
    "datasetSchemas": {
        "all": "/ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/datasetDoc.json",
        "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/datasetDoc.json",
        "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/datasetDoc.json",
        "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/datasetDoc.json"
    },
    "datasetSchemasManipulated": {},
    "evaluationMethod": "kFold",
    "indices": {
        "all": [
            5164,
            1574,
            7350,
            9306,
            15569,
            21900,
            3723,
            12962,
            20412,
            14361,
            2531,
            22326,
            13359,
            16878,
            25477,
            18015,
            4270,
            7280,
            26177,
            12737,
            15004,
            17572,
            16205,
            17674,
            3023,
            9321,
            12955,
            17143,
            17312,
            5921,
            15404,
            7544,
            19351,
            2446,
            12393,
            14707,
            26100,
            17322,
            22118,
            4693,
            22446,
            11108,
            2686,
            12795,
            19009,
            464,
            17413,
            2431,
            8533,
            19634,
            25839,
            18246,
            23681,
            9138,
            16567,
            14692,
            24911,
            9629,
            20621,
            7927,
            21114,
            20614,
            24732,
            7501,
            17088,
            8969,
            1747,
            17185,
            12497,
            11334,
            23645,
            18798,
            22484,
            26398,
            5693,
            21975,
            4739,
            22811,
            23677,
            20224,
            22523,
            17139,
            13554,
            14347,
            1671,
            13180,
            14566,
            14426,
            14953,
            9070,
            11770,
            19928,
            9899,
            4877,
            1545,
            17311,
            19426,
            19108,
            10234,
            5168,
            11015,
            10340,
            13998,
            11248,
            1873,
            24346,
            26288,
            21515,
            17836,
            24409,
            395,
            340,
            25832,
            11637,
            21446,
            22266,
            7574,
            26057,
            5154,
            17619,
            26522,
            12690,
            21671,
            1777,
            15995,
            12532,
            23286,
            25310,
            17108,
            9658,
            23042,
            7178,
            15998,
            8314,
            16000,
            19250,
            23682,
            452,
            3597,
            45,
            25395,
            10820,
            11843,
            12848,
            2322,
            13995,
            4934,
            3114,
            26561,
            16479,
            11668,
            4920,
            26258,
            4690,
            20847,
            14487,
            2075,
            3799,
            1107,
            11476,
            11753,
            23934,
            20473,
            15223,
            12915,
            22838,
            15383,
            19656,
            805,
            4955,
            15771,
            2619,
            16463,
            15435,
            24684,
            16932,
            19851,
            26155,
            16175,
            26297,
            13371,
            9641,
            13381,
            12159,
            20634,
            10119,
            10143,
            687,
            5599,
            17719,
            20617,
            8895,
            20167,
            25954,
            26787,
            22348,
            23590,
            16705,
            19506,
            3344,
            24715,
            18324,
            8215,
            8606,
            2663,
            1311,
            25264,
            12085,
            17377,
            13577,
            21089,
            10557,
            20394,
            1308,
            12796,
            6765,
            8749,
            80,
            1759,
            11384,
            5736,
            20156,
            5590,
            7235,
            17791,
            25218,
            24429,
            4726,
            24556,
            3994,
            12419,
            25611,
            5002,
            14138,
            8513,
            21957,
            23350,
            26831,
            10139,
            4478,
            17093,
            26983,
            23487,
            23716,
            6819,
            11642,
            27097,
            13424,
            730,
            25394,
            11008,
            2953,
            11712,
            5386,
            3118,
            453,
            1621,
            6959,
            3843,
            16286,
            14903,
            18533,
            14848,
            17505,
            3986,
            23449,
            13824,
            22962,
            13836,
            10736,
            23898,
            24419,
            21917,
            3801,
            20882,
            3217,
            21569,
            10541,
            26497,
            14137,
            4805,
            2829,
            4919,
            25921,
            7310,
            16851,
            5102,
            22344,
            26078,
            2411,
            9452,
            1260,
            9399,
            11993,
            14662,
            5466,
            20134,
            17589,
            1965,
            26072,
            2676,
            23087,
            12555,
            22037,
            20265,
            5640,
            18467,
            6106,
            5765,
            8598,
            8312,
            3037,
            2278,
            1006,
            19523,
            12655,
            22486,
            16213,
            12373,
            15175,
            26692,
            1817,
            22158,
            22930,
            15445,
            11564,
            6883,
            21378,
            14696,
            6200,
            7093,
            13054,
            20935,
            21937,
            23151,
            21322,
            17140,
            26143,
            18020,
            18437,
            11434,
            24615,
            19465,
            17787,
            27019,
            12229,
            20693,
            14767,
            4448,
            1571,
            11817,
            3899,
            6395,
            11602,
            23597,
            12048,
            25785,
            26763,
            8926,
            6680,
            8257,
            10959,
            25115,
            4580,
            17909,
            14132,
            26949,
            13079,
            3664,
            22478,
            23579,
            22144,
            11341,
            3987,
            24754,
            12870,
            3429,
            2035,
            1213,
            21387,
            25898,
            15293,
            3163,
            5706,
            11395,
            14477,
            17120,
            21429,
            8709,
            12707,
            1443,
            15230,
            19258,
            10439,
            1523,
            15769,
            11374,
            22617,
            9966,
            21582,
            22292,
            10941,
            478,
            20750,
            2076,
            3634,
            325,
            25830,
            4909,
            3658,
            22003,
            10776,
            446,
            9824,
            15492,
            5514,
            7349,
            3556,
            7514,
            26463,
            13432,
            12669,
            23890,
            8433,
            8860,
            2444,
            13957,
            20383,
            1949,
            19271,
            18157,
            8499,
            4724,
            22600,
            18670,
            26820,
            3628,
            15522,
            26069,
            1600,
            18207,
            23883,
            2626,
            25078,
            12486,
            18105,
            17155,
            19628,
            9404,
            12022,
            24164,
            10868,
            19117,
            19499,
            19088,
            4349,
            7755,
            8212,
            2088,
            17647,
            15104,
            13196,
            9590,
            1930,
            18650,
            22866,
            12494,
            4811,
            25322,
            16179,
            20684,
            21987,
            17810,
            23241,
            591,
            15158,
            15390,
            17439,
            4179,
            18262,
            1952,
            1062,
            20677,
            12515,
            16180,
            17186,
            1683,
            15830,
            7442,
            14403,
            4532,
            21425,
            21207,
            18760,
            25683,
            23117,
            25528,
            22714,
            12088,
            12697,
            15662,
            12641,
            10003,
            10885,
            14146,
            93,
            4665,
            639,
            24062,
            18795,
            19612,
            26578,
            10395,
            15056,
            11699,
            21998,
            8024,
            7610,
            16658,
            2559,
            9851,
            26889,
            18166,
            182,
            3798,
            21824,
            19010,
            7679,
            13766,
            10503,
            19508,
            4514,
            11573,
            14121,
            14906,
            17770,
            18524,
            26756,
            5877,
            23340,
            9558,
            6080,
            25575,
            7184,
            24474,
            19664,
            24594,
            4275,
            20665,
            3804,
            20639,
            22437,
            3208,
            2080,
            19869,
            26516,
            19842,
            7154,
            26213,
            24825,
            18054,
            9429,
            15381,
            2217,
            9665,
            20327,
            450,
            462,
            22114,
            15530,
            13408,
            1996,
            6809,
            11225,
            22875,
            19870,
            7483,
            6379,
            75,
            21517,
            170,
            14578,
            23459,
            23624,
            8382,
            14602,
            23296,
            12434,
            12787,
            10852,
            764,
            20463,
            15807,
            13295,
            8315,
            23628,
            9935,
            9598,
            2947,
            532,
            97,
            1265,
            23858,
            22333,
            19511,
            22198,
            7321,
            4963,
            21960,
            11131,
            14858,
            4450,
            22029,
            22354,
            2292,
            22296,
            15949,
            17148,
            13350,
            8522,
            2929,
            7016,
            22686,
            17610,
            21033,
            21646,
            11539,
            26141,
            6748,
            15119,
            22057,
            16573,
            16466,
            25641,
            7305,
            24086,
            17822,
            16536,
            18666,
            5656,
            3026,
            3482,
            5914,
            5243,
            9871,
            22627,
            26657,
            12789,
            13746,
            15696,
            19893,
            16183,
            8774,
            23400,
            23742,
            2301,
            16980,
            21898,
            26518,
            14898,
            3098,
            1182,
            14895,
            21465,
            6787,
            4564,
            1112,
            13289,
            2468,
            12814,
            3033,
            12689,
            21950,
            17264,
            5946,
            3952,
            10584,
            5544,
            14293,
            294,
            26019,
            5452,
            20582,
            9339,
            26230,
            13818,
            11601,
            3859,
            21712,
            8394,
            22290,
            15478,
            24989,
            19129,
            1725,
            13042,
            21043,
            6833,
            12403,
            24602,
            11550,
            23690,
            20436,
            17677,
            18978,
            3087,
            10931,
            10896,
            18220,
            16796,
            23479,
            8156,
            11634,
            12054,
            17491,
            3750,
            258,
            225,
            2883,
            1597,
            9676,
            2755,
            20680,
            10301,
            22943,
            8268,
            11819,
            16,
            26215,
            12095,
            26237,
            18016,
            5282,
            26264,
            436,
            26397,
            10513,
            20988,
            15458,
            25480,
            26727,
            14857,
            10695,
            8445,
            4789,
            9118,
            11019,
            24812,
            16161,
            26538,
            21780,
            20129,
            5539,
            10096,
            25419,
            23385,
            13328,
            6093,
            5155,
            2538,
            9556,
            2808,
            13564,
            15883,
            8409,
            2600,
            1448,
            21253,
            23511,
            22231,
            14981,
            25197,
            23665,
            12753,
            8077,
            5152,
            21669,
            15019,
            9893,
            7198,
            14556,
            6826,
            21123,
            25617,
            16241,
            13112,
            22018,
            4060,
            14422,
            9798,
            10024,
            20271,
            6550,
            14346,
            18748,
            1110,
            21460,
            1102,
            9645,
            15790,
            15732,
            20726,
            15702,
            12398,
            12584,
            20622,
            20927,
            8199,
            5679,
            5952,
            21096,
            42,
            9575,
            21423,
            20795,
            25467,
            7943,
            9023,
            16973,
            12504,
            14037,
            24428,
            11671,
            23712,
            2888,
            5852,
            16142,
            16194,
            5469,
            15967,
            22772,
            18460,
            13939,
            24188,
            2809,
            19149,
            8041,
            13647,
            2942,
            25852,
            17062,
            9842,
            24113,
            26367,
            4893,
            26427,
            14850,
            7371,
            19822,
            25294,
            4370,
            20147,
            23354,
            24798,
            26361,
            19736,
            24064,
            14682,
            3985,
            7487,
            26042,
            12044,
            217,
            11132,
            5091,
            9999,
            2566,
            19705,
            18032,
            14155,
            25563,
            25483,
            19687,
            5882,
            6374,
            135,
            4426,
            5880,
            10187,
            18796,
            24616,
            23145,
            24984,
            25828,
            2099,
            22022,
            16853,
            26058,
            24833,
            9482,
            23733,
            26980,
            8957,
            14869,
            2185,
            9689,
            13989,
            7253,
            11316,
            777,
            22139,
            25640,
            9170,
            18031,
            12549,
            14219,
            26275,
            26041,
            25814,
            15245,
            2046,
            15721,
            16864,
            20990,
            3639,
            9904,
            26142,
            12518,
            16405,
            23512,
            8267,
            24110,
            24165,
            4587,
            2153,
            25995,
            22565,
            14163,
            10546,
            15800,
            19512,
            14861,
            24276,
            4056,
            21955,
            7242,
            11987,
            4926,
            23249,
            16440,
            26595,
            23207,
            8161,
            5269,
            3666,
            18594,
            1169,
            9024,
            23466,
            12222,
            2143,
            26406,
            6408,
            16028,
            5400,
            15038,
            24852,
            22965,
            19273,
            12533,
            24096,
            15043,
            24977,
            8130,
            139,
            7225,
            16163,
            118,
            24204,
            17033,
            20602,
            12648,
            13499,
            5144,
            2502,
            16655,
            3316,
            12134,
            21817,
            19419,
            23074,
            420,
            11046,
            4324,
            20673,
            15734,
            23298,
            15959,
            6683,
            2831,
            4406,
            18249,
            9572,
            7695,
            7538,
            12717,
            17073,
            9564,
            7966,
            17392
        ],
        "test": [
            9550,
            5494,
            5395,
            774,
            13517,
            5455,
            12926,
            26905,
            26525,
            16259,
            16209,
            25331,
            13170,
            15150,
            26457,
            13949,
            16071,
            9816,
            17118,
            6793,
            12521,
            1985,
            748,
            19945,
            20039,
            8850,
            25219,
            14516,
            26144,
            6255,
            5329,
            27025,
            21764,
            10190,
            11718,
            10299,
            7731,
            22542,
            14570,
            10867,
            5007,
            21865,
            14245,
            22734,
            19159,
            11078,
            6868,
            5187,
            208,
            20487,
            4226,
            619,
            14091,
            6002,
            5942,
            14706,
            25293,
            355,
            10367,
            20317,
            21213,
            12338,
            830,
            2652,
            1773,
            5126,
            23372,
            12032,
            24625,
            5075,
            15497,
            10371,
            3374,
            2607,
            13299,
            11959,
            16522,
            22923,
            10894,
            5691,
            2566,
            9552,
            20400,
            10644,
            4148,
            22606,
            21943,
            3864,
            9170,
            23670,
            26974,
            17313,
            5116,
            23565,
            17576,
            18548,
            10411,
            1029,
            6297,
            13574,
            1301,
            7846,
            9388,
            17438,
            11680,
            7763,
            12021,
            13832,
            19153,
            21402,
            17640,
            15260,
            7005,
            11169,
            8902,
            22050,
            24379,
            25180,
            10427,
            18699,
            20697,
            3465,
            14313,
            6815,
            1418,
            7046,
            5231,
            4747,
            1440,
            15665,
            10196,
            5027,
            16303,
            22026,
            7366,
            5357,
            26627,
            23626,
            9617,
            3580,
            19581,
            25107,
            8593,
            13462,
            15359,
            27056,
            8072,
            9214,
            16247,
            6732,
            9341,
            18837,
            25048,
            3505,
            6944,
            23016,
            19252,
            230,
            15802,
            20376,
            21660,
            6674,
            1752,
            1238,
            18324,
            1438,
            19273,
            740,
            9683,
            11512,
            7588,
            19241,
            5642,
            9874,
            23887,
            3906,
            18649,
            16857,
            5370,
            18395,
            21176,
            3907,
            14283,
            2020,
            10252,
            5704,
            3234,
            7430,
            10641,
            26790,
            19195,
            18533,
            11881,
            12621,
            4098,
            11231,
            9417,
            21737,
            402,
            4391,
            8272,
            12992,
            19902,
            10012,
            25028,
            8645,
            16903,
            13886,
            5443,
            21559,
            14618,
            27012,
            24974,
            2666,
            8789,
            3739,
            12967,
            18213,
            6573,
            17651,
            12277,
            20502,
            19786,
            25554,
            15973,
            15681,
            12563,
            3473,
            22662,
            12671,
            6354,
            4823,
            3203,
            10416,
            11109,
            12485,
            18764,
            17546,
            21271,
            8253,
            24559,
            9368,
            16537,
            8563,
            14660,
            10951,
            3238,
            8336,
            7382,
            19324,
            4696,
            13531,
            23773,
            15606,
            4658,
            21691,
            6189,
            14628,
            3549,
            20512,
            22139,
            10241,
            15596,
            10725,
            21048,
            15229,
            1746,
            24330,
            17878,
            5225,
            24874,
            26166,
            8457,
            21189,
            350,
            7210,
            5711,
            23751,
            3838,
            2664,
            24899,
            21807,
            15060,
            4092,
            19236,
            6213,
            5142,
            18029,
            15554,
            18028,
            15274,
            23593,
            9888,
            23624,
            26578,
            8187,
            19678,
            11888,
            881,
            20528,
            2984,
            10043,
            4029,
            1011,
            22979,
            3719,
            6128,
            2212,
            26666,
            8141,
            23918,
            10803,
            17033,
            10877,
            11911,
            16312,
            17650,
            13463,
            15668,
            25470,
            13948,
            23893,
            3491,
            24444,
            8950,
            24674,
            11800,
            18455,
            4048,
            9372,
            20938,
            21351,
            19485,
            17929,
            21103,
            19857,
            3641,
            2169,
            9277,
            10960,
            4487,
            21396,
            1479,
            3645,
            7456,
            24653,
            15446,
            9385,
            18709,
            16740,
            9190,
            17738,
            9376,
            1480,
            13174,
            22035,
            14677,
            9397,
            21684,
            12000,
            19079,
            11263,
            17503,
            14867,
            9355,
            13597,
            7709,
            19277,
            9846,
            10131,
            11440,
            13667,
            23352,
            700,
            22088,
            11121,
            21328,
            15535,
            20017,
            18679,
            8166,
            26881,
            11162,
            21417,
            1730,
            8035,
            17528,
            94,
            12150,
            25056,
            6887,
            25237,
            5448,
            5668,
            14190,
            12836,
            10349,
            13620,
            25718,
            23503,
            899,
            25710,
            6389,
            16403,
            13347,
            13478,
            15560,
            17778,
            20986,
            6784,
            14208,
            12365,
            26884,
            6020,
            2552,
            20760,
            16063,
            4388,
            1416,
            13626,
            10018,
            23401,
            1252,
            11696,
            23689,
            4172,
            17055,
            13679,
            20767,
            4026,
            15125,
            17431,
            24984,
            6046,
            3205,
            10094,
            14840,
            21235,
            25079,
            13034,
            13233,
            9578,
            17715,
            16206,
            15033,
            25961,
            24118,
            21050,
            23725,
            24907,
            7851,
            2181,
            17662,
            18122,
            3911,
            1357,
            20844,
            21880,
            23455,
            13430,
            25864,
            12191,
            19951,
            26229,
            20190,
            22318,
            16993,
            25957,
            8312,
            25574,
            9569,
            10280,
            16742,
            23017,
            19643,
            10467,
            9075,
            1715,
            25432,
            7582,
            13790,
            3517,
            20003,
            11340,
            13013,
            9616,
            6930,
            16786,
            2398,
            18381,
            21964,
            13215,
            2685,
            20027,
            25485,
            16453,
            15477,
            8096,
            25191,
            19565,
            17872,
            18314,
            17287,
            8667,
            16400,
            21462,
            6935,
            6101,
            8148,
            5861,
            15063,
            18053,
            1847,
            12756,
            14030,
            10286,
            5741,
            18781,
            25270,
            1675,
            9327,
            5920,
            1593,
            23752,
            11843,
            24178,
            5937,
            7343,
            9094,
            14282,
            11252,
            2906,
            10271,
            9013,
            583,
            26717,
            3047,
            11657,
            6010,
            8451,
            17789,
            27085,
            871,
            8884,
            8000,
            9082,
            7304,
            15576,
            2154,
            11312,
            8289,
            7994,
            2857,
            25912,
            20511,
            4750,
            10035,
            12457,
            20796,
            2709,
            2784,
            10637,
            2124,
            10459,
            20065,
            19233,
            12009,
            16292,
            8747,
            7442,
            17256,
            19210,
            17014,
            25800,
            17743,
            13255,
            9485,
            26955,
            4329,
            16081,
            6224,
            13689,
            134,
            4301,
            5278,
            3618,
            13138,
            1648,
            16112,
            10421,
            25622,
            7721,
            9479,
            11278,
            19624,
            7056,
            16202,
            27014,
            19587,
            16069,
            26163,
            3990,
            15458,
            25302,
            20670,
            21757,
            23855,
            14696,
            10472,
            7060,
            24603,
            19571,
            5728,
            14592,
            5938,
            14122,
            20211,
            24903,
            19411,
            5295,
            25183,
            16669,
            26904,
            22197,
            1129,
            3673,
            6802,
            20151,
            21406,
            8,
            23164,
            20609,
            14285,
            24207,
            16730,
            10568,
            7394,
            7506,
            18657,
            12484,
            5697,
            21734,
            7702,
            11086,
            19177,
            10976,
            14451,
            26156,
            18625,
            14391,
            2094,
            16065,
            12936,
            7081,
            17862,
            10220,
            9473,
            19091,
            9349,
            8425,
            14033,
            9706,
            17165,
            22862,
            3516,
            19782,
            11013,
            21854,
            7274,
            25268,
            4991,
            7675,
            5543,
            12353,
            21459,
            8524,
            17357,
            17358,
            10831,
            4109,
            1983,
            23874,
            875,
            16472,
            3239,
            7981,
            17816,
            6928,
            18825,
            12459,
            19203,
            2051,
            24136,
            22472,
            5104,
            8088,
            4484,
            11023,
            15025,
            26712,
            15644,
            19771,
            12290,
            14852,
            25073,
            10580,
            5307,
            2712,
            15718,
            11661,
            22306,
            16033,
            9507,
            3426,
            18469,
            1624,
            17048,
            26610,
            26351,
            2404,
            12244,
            4694,
            20040,
            12423,
            4706,
            4501,
            8293,
            5538,
            1047,
            6980,
            25501,
            15656,
            6319,
            22961,
            1943,
            13323,
            16619,
            2151,
            9413,
            20407,
            14229,
            19775,
            5689,
            1514,
            15884,
            410,
            16157,
            17696,
            26226,
            25017,
            25471,
            20417,
            15340,
            914,
            16512,
            4277,
            21646,
            17687,
            4777,
            13580,
            21389,
            11031,
            13542,
            25203,
            20723,
            22249,
            3269,
            916,
            1797,
            6973,
            13390,
            3908,
            2791,
            11398,
            15754,
            18459,
            505,
            1006,
            4137,
            9692,
            11949,
            3401,
            4528,
            18879,
            10033,
            17787,
            242,
            24390,
            7064,
            11179,
            26273,
            24518,
            8601,
            3279,
            17367,
            4141,
            12308,
            22418,
            18962,
            24938,
            15661,
            23631,
            4589,
            3175,
            14251,
            23676,
            22361,
            16701,
            4934,
            4546,
            8595,
            18759,
            17394,
            2446,
            3709,
            2252,
            6698,
            2930,
            19053,
            1369,
            26296,
            6226,
            2187,
            992,
            8701,
            19292,
            9389,
            24371,
            26492,
            2739,
            25849,
            11088,
            26883,
            25106,
            292,
            23744,
            11907,
            14182,
            10653,
            1587,
            18018,
            25553,
            25465,
            8487,
            61,
            8795,
            5036,
            26833,
            8637,
            9058,
            5031,
            6747,
            8888,
            12598,
            14275,
            13934,
            14801,
            17885,
            12543,
            17216,
            8562,
            25945,
            20471,
            4843,
            9943,
            20666,
            6942,
            25344,
            9073,
            7068,
            22372,
            676,
            25459,
            3684,
            948,
            18646,
            19301,
            5527,
            1429,
            1133,
            7402,
            2108,
            9668,
            10125,
            15880,
            12576,
            7446,
            18021,
            7720,
            19672,
            14338,
            19566,
            6818,
            9142,
            15233,
            17139,
            2649,
            4100,
            24069,
            23075,
            9581,
            2533,
            11927,
            22732,
            25532,
            11417,
            26405,
            15029,
            3033,
            1113,
            24140,
            15132,
            11207,
            11001,
            13298,
            26969,
            15629,
            3318,
            19769,
            26979,
            19685,
            20468,
            12034,
            24764,
            21697,
            24426,
            11987,
            1340,
            24347,
            22029,
            22806,
            15691,
            11525,
            16987,
            10005,
            25628,
            22336,
            21465,
            20887,
            20731,
            13104,
            20636,
            24697,
            18671,
            25763,
            5953,
            9314,
            25339,
            3599,
            14483,
            27087,
            17922,
            4536,
            23720,
            26679,
            18061,
            22598,
            11075,
            20030,
            23278,
            617,
            4431,
            23423,
            8085,
            22057,
            5621,
            11626,
            24707,
            21334,
            16436,
            24344,
            6137,
            17864,
            2676,
            11583,
            5212,
            19941,
            1607,
            13741,
            20712,
            9295,
            19059,
            8359,
            9895,
            15280,
            12980,
            13216,
            1696,
            13314,
            25634,
            23972,
            5625,
            20800,
            14159,
            11765,
            14049,
            26345,
            21292,
            18144,
            19974
        ],
        "train": [
            18701,
            1743,
            16423,
            19767,
            19564,
            6337,
            17769,
            16383,
            8799,
            23259,
            22097,
            20203,
            17071,
            7439,
            18778,
            11809,
            6709,
            15394,
            8083,
            15996,
            7888,
            24877,
            10194,
            26142,
            6349,
            1177,
            10320,
            17265,
            9380,
            17224,
            25730,
            11046,
            18182,
            10671,
            19716,
            8567,
            23836,
            20175,
            24160,
            12418,
            11208,
            17364,
            16621,
            22531,
            4267,
            22421,
            9902,
            23174,
            20503,
            23060,
            22802,
            26451,
            8695,
            18192,
            2142,
            18228,
            9062,
            20296,
            10689,
            3556,
            755,
            19828,
            17026,
            11175,
            16144,
            25332,
            19689,
            20436,
            21751,
            2359,
            8146,
            12791,
            13168,
            24496,
            17561,
            2728,
            1109,
            23299,
            6510,
            4182,
            21022,
            4090,
            6875,
            15374,
            3428,
            18545,
            2065,
            2012,
            20035,
            23636,
            16548,
            655,
            4689,
            21776,
            9365,
            24424,
            411,
            12793,
            15810,
            9632,
            25029,
            8367,
            5518,
            12972,
            4574,
            4047,
            3486,
            14026,
            20189,
            11424,
            3813,
            13675,
            12258,
            2209,
            22465,
            726,
            18582,
            9576,
            6131,
            1769,
            18562,
            1989,
            15310,
            26478,
            10485,
            7666,
            6920,
            2840,
            13926,
            708,
            13333,
            22869,
            17833,
            15979,
            9470,
            10676,
            2842,
            6149,
            15581,
            21054,
            23327,
            4772,
            20238,
            21693,
            1846,
            7175,
            18306,
            14623,
            3490,
            21924,
            595,
            5354,
            23655,
            17211,
            4887,
            19021,
            20210,
            26870,
            23584,
            20975,
            11607,
            22206,
            8370,
            10315,
            20920,
            7410,
            8748,
            3245,
            10680,
            11648,
            20274,
            11678,
            15879,
            23563,
            25403,
            4195,
            2127,
            1535,
            5596,
            12116,
            1682,
            5058,
            8377,
            13731,
            4927,
            21500,
            17590,
            3914,
            1142,
            24287,
            25940,
            17709,
            10189,
            22981,
            1811,
            2307,
            21431,
            18141,
            17371,
            9798,
            10460,
            20706,
            5712,
            13756,
            23310,
            8121,
            18728,
            3881,
            10060,
            16513,
            1591,
            11693,
            17081,
            6659,
            7559,
            6200,
            14505,
            12284,
            24978,
            6015,
            17506,
            18550,
            2551,
            9527,
            17024,
            18512,
            9560,
            26902,
            13210,
            15598,
            26426,
            4871,
            24394,
            8376,
            7173,
            13833,
            13907,
            17092,
            14281,
            3776,
            2737,
            2720,
            14990,
            26408,
            23417,
            20673,
            25304,
            11484,
            13179,
            10154,
            26893,
            14735,
            12490,
            19378,
            14209,
            6842,
            8665,
            10659,
            16725,
            20551,
            2587,
            1203,
            11617,
            15807,
            447,
            9429,
            8600,
            14841,
            6575,
            2801,
            5417,
            8364,
            19754,
            8980,
            18406,
            18820,
            25522,
            6878,
            5158,
            3591,
            1033,
            18994,
            11077,
            5481,
            21671,
            6094,
            21950,
            26598,
            2856,
            14397,
            6699,
            13691,
            15492,
            13794,
            22441,
            20319,
            15319,
            24103,
            11642,
            24994,
            10662,
            7813,
            16218,
            8446,
            20642,
            13082,
            22236,
            15848,
            9162,
            20810,
            20291,
            7026,
            1788,
            6434,
            5428,
            4509,
            11618,
            7231,
            12487,
            14124,
            24192,
            12807,
            15868,
            3154,
            16099,
            12370,
            18180,
            7291,
            11025,
            18950,
            21003,
            19458,
            4229,
            804,
            70,
            43,
            14335,
            6833,
            11193,
            20379,
            21780,
            23084,
            147,
            4038,
            23931,
            10123,
            24116,
            19086,
            9434,
            6276,
            12130,
            7626,
            2541,
            2723,
            23234,
            22228,
            3135,
            19631,
            16842,
            6556,
            24217,
            22493,
            21224,
            10067,
            15129,
            9800,
            17439,
            22574,
            145,
            26600,
            15603,
            3088,
            19790,
            13645,
            3124,
            15528,
            20026,
            7350,
            5493,
            15338,
            4564,
            13434,
            9775,
            14659,
            22292,
            8318,
            2598,
            15943,
            16143,
            12274,
            6627,
            18642,
            16198,
            13033,
            21809,
            356,
            6139,
            14818,
            15680,
            1958,
            7785,
            11826,
            25638,
            22692,
            16251,
            1268,
            23635,
            1074,
            885,
            6488,
            6654,
            8700,
            24859,
            19820,
            15149,
            19279,
            7417,
            22289,
            16106,
            25279,
            13451,
            5999,
            7621,
            26949,
            11824,
            13419,
            7110,
            24927,
            16127,
            185,
            12884,
            12998,
            20955,
            25077,
            24011,
            19365,
            14088,
            9330,
            26026,
            21749,
            13454,
            21112,
            8803,
            3013,
            20620,
            10851,
            7661,
            17593,
            14722,
            21169,
            7658,
            7166,
            8415,
            20881,
            20601,
            23305,
            6070,
            21479,
            12240,
            13209,
            4099,
            18390,
            6650,
            7518,
            13076,
            5470,
            7808,
            6945,
            17330,
            11646,
            96,
            17754,
            3119,
            14758,
            26911,
            9509,
            22194,
            17679,
            25653,
            12157,
            1437,
            11339,
            16042,
            25174,
            20514,
            19068,
            3893,
            23934,
            12890,
            7647,
            127,
            10068,
            17803,
            18619,
            26489,
            13605,
            2873,
            23408,
            27097,
            8402,
            18860,
            7789,
            458,
            4755,
            7206,
            16153,
            19496,
            1859,
            11234,
            453,
            21730,
            16082,
            9728,
            9783,
            22579,
            12067,
            23539,
            18147,
            1956,
            24340,
            20622,
            17923,
            26706,
            673,
            12897,
            20552,
            26325,
            5627,
            23938,
            20372,
            21279,
            16077,
            21586,
            6559,
            3408,
            18004,
            11105,
            9786,
            3623,
            11904,
            10821,
            19953,
            14109,
            20705,
            1134,
            15724,
            18919,
            5628,
            6361,
            22721,
            25307,
            26958,
            4490,
            20193,
            11321,
            18365,
            10183,
            6023,
            25567,
            688,
            14656,
            9078,
            13208,
            19525,
            11073,
            22801,
            11682,
            15564,
            12839,
            14851,
            6730,
            11960,
            26827,
            12951,
            26656,
            10603,
            12849,
            4271,
            20794,
            4531,
            22395,
            14909,
            5424,
            3377,
            15371,
            25100,
            6901,
            26463,
            1048,
            14341,
            21220,
            21753,
            25533,
            399,
            3136,
            26714,
            26624,
            11727,
            10119,
            15522,
            18963,
            22877,
            3780,
            6717,
            14268,
            3916,
            13263,
            18277,
            16577,
            12406,
            10171,
            19078,
            4708,
            10513,
            26523,
            20821,
            23153,
            2632,
            8428,
            13073,
            21482,
            14380,
            6262,
            21115,
            10621,
            21598,
            3327,
            13642,
            6142,
            13553,
            16714,
            18961,
            3849,
            3172,
            11630,
            7057,
            4304,
            1810,
            22058,
            17146,
            5223,
            22576,
            6821,
            4728,
            19083,
            26185,
            26059,
            26642,
            7585,
            21538,
            11412,
            7892,
            26647,
            26912,
            2891,
            14056,
            1032,
            24699,
            6838,
            5733,
            17457,
            7396,
            18212,
            17425,
            20299,
            2554,
            19103,
            9064,
            14603,
            1669,
            6522,
            1232,
            10799,
            20716,
            10949,
            1927,
            21327,
            1453,
            21562,
            16897,
            12441,
            18172,
            25534,
            10511,
            2981,
            11772,
            26239,
            20547,
            11079,
            7820,
            7302,
            20608,
            15165,
            15251,
            14085,
            13239,
            6531,
            15725,
            7631,
            6234,
            14059,
            21369,
            12444,
            1030,
            3715,
            25910,
            15456,
            11035,
            25290,
            4272,
            22193,
            26926,
            3586,
            22274,
            20707,
            10579,
            11724,
            20398,
            3555,
            23034,
            4186,
            11976,
            7246,
            25951,
            18058,
            11376,
            14373,
            17726,
            17355,
            12074,
            14213,
            15586,
            6068,
            14549,
            25102,
            9834,
            8591,
            4597,
            23002,
            18856,
            19929,
            16757,
            7118,
            17064,
            2973,
            5764,
            13301,
            15777,
            954,
            1539,
            24780,
            17137,
            15860,
            4899,
            3931,
            24256,
            6282,
            23588,
            5713,
            15423,
            11980,
            25053,
            22519,
            8921,
            17205,
            16333,
            4440,
            11187,
            14732,
            14232,
            5072,
            12134,
            4918,
            23618,
            2270,
            13663,
            12534,
            7855,
            22597,
            17149,
            5578,
            3095,
            23976,
            23591,
            26729,
            6696,
            24131,
            2295,
            13342,
            24940,
            19082,
            4349,
            20739,
            444,
            22939,
            18958,
            18065,
            20077,
            2136,
            857,
            5747,
            26857,
            25764,
            13736,
            19481,
            12819,
            5508,
            7146,
            5406,
            5945,
            16710,
            24695,
            20286,
            9293,
            23505,
            26776,
            20916,
            24415,
            8806,
            23353,
            16905,
            18890,
            7742,
            19010,
            20395,
            27094,
            21302,
            6360,
            9903,
            26843,
            13158,
            18967,
            20926,
            16031,
            4868,
            4094,
            8983,
            16442,
            1199,
            19889,
            26622,
            18526,
            1922,
            21507,
            23885,
            14021,
            21710,
            5880,
            18609,
            3891,
            4503,
            6904,
            7832,
            8557,
            18357,
            12247,
            17198,
            26471,
            20086,
            19797,
            6014,
            5299,
            4948,
            21291,
            25955,
            9399,
            26849,
            22772,
            5067,
            5638,
            19849,
            4002,
            18087,
            16971,
            15747,
            3940,
            9780,
            12176,
            6185,
            26864,
            9525,
            13444,
            18252,
            20857,
            17842,
            15654,
            6533,
            19160,
            1918,
            16004,
            745,
            2423,
            24132,
            23011,
            25429,
            19232,
            20727,
            14600,
            3692,
            2780,
            14826,
            14128,
            8238,
            7462,
            23191,
            16559,
            19582,
            884,
            8558,
            15930,
            13668,
            62,
            848,
            9392,
            19641,
            6268,
            16306,
            10657,
            512,
            25766,
            11254,
            4656,
            24198,
            23846,
            4712,
            5258,
            486,
            9290,
            172,
            6700,
            7611,
            7716,
            22048,
            23632,
            19699,
            10985,
            16639,
            1084,
            10538,
            19035,
            20753,
            10376,
            7469,
            8830,
            20698,
            4979,
            11302,
            19219,
            14754,
            14857,
            26203,
            24659,
            25229,
            18830,
            11195,
            13260,
            263,
            4185,
            15037,
            13614,
            13367,
            5059,
            26998,
            12405,
            15770,
            5172,
            13029,
            3501,
            14244,
            25773,
            2505,
            18629,
            23309,
            14008,
            626,
            1208,
            8230,
            25397,
            20442,
            21017,
            18416,
            7303,
            1393,
            16974,
            3843,
            14087,
            2656,
            8174,
            3072,
            20577,
            14324,
            12178,
            1025,
            26459,
            7378,
            1001,
            6326,
            4289,
            15223,
            14971
        ]
    },
    "manipulations": [],
    "meaningful": false,
    "metric": "rocAuc",
    "metrics": [
        "accuracy",
        "precision",
        "recall",
        "f1"
    ],
    "outOfSampleSplit": true,
    "pending": false,
    "predictors": [
        "pmid",
        "py",
        "py2",
        "py3",
        "minpol",
        "rbal",
        "lnkmdist"
    ],
    "problemID": "problem 0",
    "provenanceID": "TR12b_Gleditsch_Ward_Structural_problem_TRAIN",
    "sampleSplitsDir": "/ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/problem_TRAIN",
    "sampleSplitsFile": "sampleSplits.csv",
    "sampleTrainTestRatio": 0.35,
    "selectedSolutions": {
        "auto_sklearn": [],
        "d3m": [
            "27378"
        ],
        "h2o": [],
        "mlbox": [],
        "mljar-supervised": [],
        "tpot": []
    },
    "solutions": {
        "auto_sklearn": {
            "083d21f0-5889-4fb3-ac32-9bdd45870ca9": {
                "description": "AutoSklearnClassifier(delete_output_folder_after_terminate=True,\n           delete_tmp_folder_after_terminate=True,\n           disable_evaluator_output=False, ensemble_memory_limit=1024,\n           ensemble_nbest=50, ensemble_size=50, exclude_estimators=None,\n           exclude_preprocessors=None, get_smac_object_callback=None,\n           include_estimators=None, include_preprocessors=None,\n           initial_configurations_via_metalearning=25, logging_config=None,\n           metadata_directory=None, ml_memory_limit=3072, n_jobs=None,\n           output_folder=None, per_run_time_limit=360,\n           resampling_strategy='cv',\n           resampling_strategy_arguments={'shuffle': False, 'folds': 10},\n           seed=1, shared_mode=False, smac_scenario_args=None,\n           time_left_for_this_task=600, tmp_folder=None)",
                "model": "AutoSklearnClassifier",
                "model_id": "083d21f0-5889-4fb3-ac32-9bdd45870ca9",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b44b99c8-6165-44d3-854b-270764a7bc22.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4377f6b2-e080-4add-aebb-9295bea6e6eb.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/450b77e9-0092-4f67-9094-2fa0fa52ce13.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/94a7819e-7648-42ba-af85-e5b20cfd2a13.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/11ebff25-194d-4cfc-840f-4d87b9b3c734.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9f0f62f1-27f4-4ac8-bd68-1e89bf81a63d.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/53c50ff2-f883-47e7-b5ad-66aebe23a356.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f7425af7-4149-4bc8-99e3-31f2e2787d79.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9901852261825695
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0
                    }
                ],
                "search_id": "c08abe93-357e-44fa-82aa-0ed1471155db",
                "system": "auto_sklearn"
            }
        },
        "d3m": {
            "27297": {
                "created": "2019-11-11T05:13:52.310504+00:00",
                "details_url": "/d3m-service/stored-response/8cc2e9fa9de244c735ced1b4095b803e62d3327a9a2b01934222a3b2",
                "hash_id": "8cc2e9fa9de244c735ced1b4095b803e62d3327a9a2b01934222a3b2",
                "id": 27297,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-11T05:13:52.330462+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "1",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.1.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "fddf9d4f8ed4adff089c90181c5d2bb76198ce45ecd54c2386d2544443f59917",
                                    "id": "36d5472c-e0a4-4ed6-a1d0-2665feacff39",
                                    "name": "Mean Baseline",
                                    "pythonPath": "d3m.primitives.classification.gaussian_classification.MeanBaseline",
                                    "version": "1.5.5"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 27297,
                "produce": {
                    "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/e35b851a-c5e0-42cf-bd64-7722a9a04cdf.csv",
                    "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/7fc8ad2b-882a-4526-ae86-34373298ed51.csv",
                    "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/1f0d35f9-ddcf-4b70-b1ac-c626173b118d.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9901852011680603
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "27314": {
                "created": "2019-11-11T05:13:54.580554+00:00",
                "details_url": "/d3m-service/stored-response/cb08dbf7cc1b38283f469dcebaf779cf978414012fe49516222cb40b",
                "hash_id": "cb08dbf7cc1b38283f469dcebaf779cf978414012fe49516222cb40b",
                "id": 27314,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-11T05:13:54.600717+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "4",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.1.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "fddf9d4f8ed4adff089c90181c5d2bb76198ce45ecd54c2386d2544443f59917",
                                    "id": "36d5472c-e0a4-4ed6-a1d0-2665feacff39",
                                    "name": "Mean Baseline",
                                    "pythonPath": "d3m.primitives.classification.gaussian_classification.MeanBaseline",
                                    "version": "1.5.5"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 27314,
                "produce": {
                    "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/2c727a58-aee1-4140-9091-2d05ed6368de.csv",
                    "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/a8bc7063-5272-4202-ad9f-45b670c83a9f.csv",
                    "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/a6aef51b-ab5a-4184-b68d-c7972fc75787.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9901852011680603
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "27331": {
                "created": "2019-11-11T05:14:25.258624+00:00",
                "details_url": "/d3m-service/stored-response/cc84ca3ba11823305d991b63c8d2438154e47e2c8e0708b59c9e7a43",
                "hash_id": "cc84ca3ba11823305d991b63c8d2438154e47e2c8e0708b59c9e7a43",
                "id": 27331,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-11T05:14:25.283439+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "7",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.9.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "degree": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "include_bias": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "interaction_only": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": false
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "bca69a3ba3bb9ba1be76f541832d69e29aa70a31b59196ee56bea08a4ff85e4a",
                                    "id": "93acb44b-532a-37d3-987a-8e61a8489d77",
                                    "name": "sklearn.preprocessing.data.PolynomialFeatures",
                                    "pythonPath": "d3m.primitives.data_preprocessing.polynomial_features.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "n_neighbors": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "p": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "2"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "weights": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "distance"
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "13147d120ee15b7c2863228a17390fc892b674fb82f928e9ac8bbdfe7238fa32",
                                    "id": "754f7210-a0b7-3b7a-8c98-f43c7b663d28",
                                    "name": "sklearn.neighbors.classification.KNeighborsClassifier",
                                    "pythonPath": "d3m.primitives.classification.k_neighbors.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.8.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 27331,
                "produce": {
                    "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/ca423698-5154-4ee7-92c6-6e7dda1aa4f2.csv",
                    "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/0aa36130-6cbf-4211-a6b7-bc12a2c591d7.csv",
                    "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/90374d27-5208-4c03-8162-2742363a1d44.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5995350241661072
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9967899322509766
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.8776371479034424
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.7819548845291138
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.8270377516746521
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "27335": {
                "created": "2019-11-11T05:14:28.030988+00:00",
                "details_url": "/d3m-service/stored-response/3207decac060f6723f847a60b14d935f89a7990ec69c5afbad1132c6",
                "hash_id": "3207decac060f6723f847a60b14d935f89a7990ec69c5afbad1132c6",
                "id": 27335,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-11T05:14:28.050511+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "8",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.9.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "degree": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "include_bias": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "interaction_only": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": false
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "bca69a3ba3bb9ba1be76f541832d69e29aa70a31b59196ee56bea08a4ff85e4a",
                                    "id": "93acb44b-532a-37d3-987a-8e61a8489d77",
                                    "name": "sklearn.preprocessing.data.PolynomialFeatures",
                                    "pythonPath": "d3m.primitives.data_preprocessing.polynomial_features.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "n_neighbors": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "p": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "2"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "weights": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "distance"
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "13147d120ee15b7c2863228a17390fc892b674fb82f928e9ac8bbdfe7238fa32",
                                    "id": "754f7210-a0b7-3b7a-8c98-f43c7b663d28",
                                    "name": "sklearn.neighbors.classification.KNeighborsClassifier",
                                    "pythonPath": "d3m.primitives.classification.k_neighbors.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.8.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 27335,
                "produce": {
                    "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/9db0972a-9361-4d3b-92d1-f3e9bee4fbf2.csv",
                    "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/4abe555f-28dd-416f-92ad-67877d15ca6e.csv",
                    "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/eba7084a-4d15-494c-92b9-180ecc21ab80.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5995350241661072
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9983949661254883
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9388185739517212
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.8909774422645569
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.913518875837326
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "27365": {
                "created": "2019-11-11T05:14:39.791793+00:00",
                "details_url": "/d3m-service/stored-response/23a2da42b8a85a8efeb7608fc0cf33a39238b3689fc3e05477a32168",
                "hash_id": "23a2da42b8a85a8efeb7608fc0cf33a39238b3689fc3e05477a32168",
                "id": 27365,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-11T05:14:39.858882+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "13",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.9.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "degree": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "include_bias": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "interaction_only": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": false
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "bca69a3ba3bb9ba1be76f541832d69e29aa70a31b59196ee56bea08a4ff85e4a",
                                    "id": "93acb44b-532a-37d3-987a-8e61a8489d77",
                                    "name": "sklearn.preprocessing.data.PolynomialFeatures",
                                    "pythonPath": "d3m.primitives.data_preprocessing.polynomial_features.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "n_neighbors": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "1"
                                                }
                                            }
                                        }
                                    },
                                    "p": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "2"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "weights": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "uniform"
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "13147d120ee15b7c2863228a17390fc892b674fb82f928e9ac8bbdfe7238fa32",
                                    "id": "754f7210-a0b7-3b7a-8c98-f43c7b663d28",
                                    "name": "sklearn.neighbors.classification.KNeighborsClassifier",
                                    "pythonPath": "d3m.primitives.classification.k_neighbors.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.8.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 27365,
                "produce": {
                    "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/cc35fb4b-5063-4521-b0d3-b7322ddb7d38.csv",
                    "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/7e811deb-c042-4009-a415-138dc08383cc.csv",
                    "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/06d22bc5-f277-4d5a-8a87-dca46d419c3d.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.6060899257659912
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9962364435195923
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.8253968358039856
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.7819548845291138
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.8030887842178345
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "27378": {
                "created": "2019-11-11T05:14:45.303414+00:00",
                "details_url": "/d3m-service/stored-response/acd72c680f48c1431a209db7c60c70b5e553c3f3ac0103dccd9d6efc",
                "hash_id": "acd72c680f48c1431a209db7c60c70b5e553c3f3ac0103dccd9d6efc",
                "id": 27378,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-11T05:14:45.324418+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "16",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.9.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "degree": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "include_bias": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "interaction_only": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": false
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "bca69a3ba3bb9ba1be76f541832d69e29aa70a31b59196ee56bea08a4ff85e4a",
                                    "id": "93acb44b-532a-37d3-987a-8e61a8489d77",
                                    "name": "sklearn.preprocessing.data.PolynomialFeatures",
                                    "pythonPath": "d3m.primitives.data_preprocessing.polynomial_features.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "n_neighbors": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "1"
                                                }
                                            }
                                        }
                                    },
                                    "p": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "2"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "weights": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "uniform"
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "13147d120ee15b7c2863228a17390fc892b674fb82f928e9ac8bbdfe7238fa32",
                                    "id": "754f7210-a0b7-3b7a-8c98-f43c7b663d28",
                                    "name": "sklearn.neighbors.classification.KNeighborsClassifier",
                                    "pythonPath": "d3m.primitives.classification.k_neighbors.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.8.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 27378,
                "produce": {
                    "partials": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/708f7aea-3d77-4a77-b123-27ed9dd7c3e3.csv",
                    "test": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/b1f80687-8e72-488a-bfd8-9c303a3b1442.csv",
                    "train": "/ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/temp/403b97d0-1be2-489d-bb29-f54163e94685.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.6060899257659912
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9962364435195923
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.8253968358039856
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.7819548845291138
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.8030887842178345
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            }
        },
        "h2o": {
            "0c32a27a-b16f-4395-86fe-49e57f737107": {
                "description": "gbm-unsupervised",
                "model": "gbm-unsupervised",
                "model_id": "0c32a27a-b16f-4395-86fe-49e57f737107",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/00c936eb-4774-4abe-9312-1a0a8a2ece6b.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/edf87096-a2b3-4bcc-a3ec-1e809104ab9e.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/10378123-447e-4b20-9752-9e73957e78b6.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e01da8dd-9f6f-43d3-8d03-106a40e614bb.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/6513489e-9e2d-4d71-b375-2f7444b188cf.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/170de931-347c-4e01-b415-e4bf523283ba.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7b54c046-d267-404f-a69f-012800622bdb.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/88e9a7ae-43ce-4531-b3c9-b669001170a5.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.9076855856290001
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9904066120581507
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.5069444444444444
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.8233082706766918
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.6275071633237821
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "16e0fbd9-9a4b-4a1d-808f-20cb6d27bb75": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "16e0fbd9-9a4b-4a1d-808f-20cb6d27bb75",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/fc494f81-cd98-4aa3-8f51-bf0ab0c18c0c.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a3be463e-46ef-4e50-a121-f9242449d0ca.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/8a03f938-ebcb-4c37-99e0-ed918478cebe.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/dd0eef6e-7169-435a-99d1-d76c8b8af5e0.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/48223ce0-95a5-4a00-88a3-6c40aa324ee9.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e94d94a2-8702-43ca-8f58-254eb70b3174.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/74f360dd-63a9-4e0a-bb74-0e4d30c606dd.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5e8d9c20-9ee3-409e-809b-d60a1b1890f6.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.698647703623345
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9855361227953656
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.3157894736842105
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.40601503759398494
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.35526315789473684
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "31d791d8-a4ce-4690-9ff7-2fb4388b12eb": {
                "description": "gbm-unsupervised",
                "model": "gbm-unsupervised",
                "model_id": "31d791d8-a4ce-4690-9ff7-2fb4388b12eb",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ff0141cb-80c1-4b72-aaa3-ca5f714d7109.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/bdfc3339-b39b-487f-ac34-f8ec5056256e.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d777aeb5-6bed-4e52-bd7c-212f02ea9800.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/149261e2-bf8c-4b14-ab02-09dae73a5bbc.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b8096fa5-0681-49c5-bfee-1bebb9dfb8aa.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d3c3ae4c-bbe3-4296-a869-842f5e9ccb84.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2b60f81d-2c60-462c-a70c-42064053e19b.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/6df5a402-d86b-4626-8880-8d1b53040b03.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.9174275773649356
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9728433325953804
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.24676724137931033
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.8609022556390977
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.3835845896147404
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "5ed914db-6593-4968-b333-f40b4c838af5": {
                "description": "gbm-unsupervised",
                "model": "gbm-unsupervised",
                "model_id": "5ed914db-6593-4968-b333-f40b4c838af5",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e7529209-60a4-4523-ae29-6393c1be329d.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5cd2e7ba-949e-4b3a-a6e8-a89527a5247b.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/82931d8b-d0fa-41f7-a706-9b9434d7da10.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7ca7d5cf-d955-4bf1-b2a1-3f62e1dcb87e.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/573dade9-fefb-44ba-b69d-1155ad392e38.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/dbf7432f-0ccf-48cc-8702-6e3ca6a3fc7c.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/469a2999-168a-491c-819b-207999187fff.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/201ef6da-40b7-4311-8c9e-39354397b522.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.9159247145289069
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.980923917054092
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.32147937411095306
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.849624060150376
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.46646026831785337
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "9223a449-24df-4d3a-aa58-b305153a8f06": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "9223a449-24df-4d3a-aa58-b305153a8f06",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/21196520-f30d-459b-8cd0-3d664145ebd2.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7cc9fa80-6df9-43f7-8fb8-73552e7b0ea1.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/54e4636b-2625-48fc-8355-b5cfd5eb543a.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ed67771a-6ef4-4a34-8bbc-05d63a8e8e14.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4d469fa9-cb08-46f4-8b94-cda78ee4c338.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ff36aefb-b5ae-4790-b705-15c153de5f9d.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/88cec27e-c49a-4390-808b-e0ae994c943f.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a2d27e50-09e8-4053-98cb-d1ec4a5e7648.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.7039886943472857
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9850564533982732
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.3074792243767313
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.41729323308270677
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.35406698564593303
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "922831d0-4a9f-40a3-87b8-75c0ed9754b7": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "922831d0-4a9f-40a3-87b8-75c0ed9754b7",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b695a3ee-e1cb-445a-8c09-e4bfb492d978.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/fe562778-d190-4ca4-89a6-a8f69a7be98e.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b0fd75c3-41b5-4fa4-8370-a36d3cb0f6e5.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/787d03e8-f554-4bc8-93e6-b20070cb1159.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/94b79a3d-7ab7-41c2-b561-082d3aba3ec0.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/eb85bb17-da9e-4262-b77f-e6316f2fc45f.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a2bdf2a9-e2dd-4050-8185-42d7c7271872.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/25fd5b45-c9fe-49c3-b94f-c40ab458352d.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.6634758382018543
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9895948638476865
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.4583333333333333
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.3308270676691729
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.38427947598253276
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "9a0e2bfc-2185-4ab2-850e-377c059e2bf1": {
                "description": "deeplearning-unsupervised",
                "model": "deeplearning-unsupervised",
                "model_id": "9a0e2bfc-2185-4ab2-850e-377c059e2bf1",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/0c2e1095-d6f9-49bd-bd3e-848636976f5f.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b9d3dea1-27ff-47eb-983e-beecde76415c.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/56d9ec59-f0fc-4159-900e-1fc4332fb243.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9ce77ba4-0b42-4b1c-bd36-a245b6e1c235.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/cad8f0b8-4fa1-4391-8382-d972586b5df3.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f94619ab-1bb3-4bb7-bea4-053b646327de.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5dc14efc-6aee-44e9-aa87-c8c0ae222850.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/62f515cb-dd52-4591-ae81-7bf6772def9c.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.8480510132836936
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.783853590140949
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.03998025666337611
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.9135338345864662
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.0766078184110971
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "cb0698fd-cf16-454c-93ea-54225b8cbef1": {
                "description": "gbm-unsupervised",
                "model": "gbm-unsupervised",
                "model_id": "cb0698fd-cf16-454c-93ea-54225b8cbef1",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/8c999344-a0fd-4aa2-8fab-ce4a49ad6244.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4b117491-d173-4ca6-ab16-d68f8577d062.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/03366306-dfb5-4af5-9fd8-0ef3c5da10e0.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b5e5ccc3-4cd4-4c42-8ca1-9c25a63bcde1.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/02d04d9d-668a-47b2-9b94-ab9b95da5bd0.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2cb0a437-b292-4842-9755-b83b46cb904f.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/72c08967-fc0d-4704-b13e-0ff03239c451.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e50788d2-3cea-42b1-918c-60f45c9650fc.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.9111339890193512
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9345804737657737
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.1192521475492673
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.8872180451127819
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.21024498886414253
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "e4ca8a98-ed83-432e-bc43-96378dcdee04": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "e4ca8a98-ed83-432e-bc43-96378dcdee04",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ce91b31c-c701-4793-b6d9-33c610699cd9.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/cfcde537-faac-4439-ba24-d5113082f50a.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/85cd3792-6812-46d7-8283-855deff5ebe6.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/354a34aa-efc7-4e27-8d68-0ce0bd08ffab.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ed1d2caa-5a35-4ec4-9989-af5dcd0ba059.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a5eeee5c-c50c-4e59-b0ba-05189db130a4.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ce43a8b0-6374-462f-8694-4ec61d3d9757.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/79c8b9b9-0b72-4d03-8f7f-10e9eea3941e.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.6964533669843114
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9885617297616413
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.4140625
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.39849624060150374
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.40613026819923365
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            },
            "f3e6206e-9d3f-4889-aaf3-b2d0a9104ccc": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "f3e6206e-9d3f-4889-aaf3-b2d0a9104ccc",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2698a7d0-91df-4f85-9602-3151bbcd98ef.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/12d0cff3-198c-49b1-8250-5302d7a5dd92.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7a8333bc-f729-4923-af7b-1baf7e1d237e.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2f145183-3048-412e-a69c-75ee2d09f910.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e66fb4d2-60c2-4a92-bc65-4e20a0784dba.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e2d90197-9089-418f-94a7-75276c0c2897.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/336dd7f9-fbfb-474a-9dda-5ff874510b04.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2f861f43-d2d9-47d5-84de-2bc0d71cdac3.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.6912241663930283
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9892627850343149
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.4458874458874459
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.38721804511278196
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.41448692152917505
                    }
                ],
                "search_id": "969932c9-a607-4437-8c4f-96ac4955d5f0",
                "system": "h2o"
            }
        },
        "mlbox": {
            "bc778ecc-fe58-4aeb-b4af-cfd4b40a27a1": {
                "description": "LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=0.8,\n        importance_type='split', learning_rate=0.05, max_depth=-1,\n        min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n        n_estimators=500, n_jobs=-1, nthread=-1, num_leaves=31,\n        objective=None, random_state=None, reg_alpha=0.0, reg_lambda=0.0,\n        seed=0, silent=True, subsample=0.9, subsample_for_bin=200000,\n        subsample_freq=0)",
                "model": "LGBMClassifier",
                "model_id": "bc778ecc-fe58-4aeb-b4af-cfd4b40a27a1",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/23a7ee58-295a-4c68-9bf3-e99bfa8f0965.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/96dabd66-2b03-4411-8ddb-6c4043f0deeb.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/25428437-01dd-4f78-ad18-5ce48218c56c.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/6d2d337c-bf76-44cb-8788-2883f1df54c7.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/85dac445-26c6-45fa-b672-2491e8fcf6a2.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ba16bda0-b549-4caa-89b4-ba4c58507826.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/99d0bbfa-3ccb-45ad-8972-860a314b61ea.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/6b3081e1-f381-4567-adda-9d13f3721ce6.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.5085577378349756
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9664969374953878
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.10586760803791152
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.04145103619312165
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.047489935147234194
                    }
                ],
                "search_id": "7e734067-d8e0-495a-9b22-c8272889535c",
                "system": "mlbox"
            }
        },
        "mljar-supervised": {
            "291dfaec-63de-46f7-b10d-6197c94d7ad6": {
                "description": "<supervised.iterative_learner_framework.IterativeLearner object at 0x7fa99c6eb748>",
                "model": "Xgboost",
                "model_id": "291dfaec-63de-46f7-b10d-6197c94d7ad6",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2f201487-c675-4a80-9440-0bd1c3993f7e.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9f74e28b-2e93-4649-b216-5eb662fdebbd.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9c4ecf34-4778-4f15-b893-d670f5199a33.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a92a1239-eadc-4b13-b277-24ac69ddcace.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b3db20ed-3aba-4912-92ed-6a647ecc0155.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ca55c438-5bbb-496e-af04-2e9222400440.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9c2adcfa-7b67-40ef-92ea-e5e00a1332a1.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9dfa07a9-dc61-4407-bb31-dcd768e20dd7.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9901852261825695
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0
                    }
                ],
                "search_id": "13cf9213-83fb-4693-bbd7-4b936a85ad07",
                "system": "mljar-supervised"
            },
            "9085c1bb-bad3-4afd-b92b-e56c85196f1c": {
                "description": "<supervised.models.ensemble.Ensemble object at 0x7fa99c42ada0>",
                "model": "Ensemble",
                "model_id": "9085c1bb-bad3-4afd-b92b-e56c85196f1c",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9df32e6e-4a54-43ea-b4a6-4500f08b7237.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/685be188-40bb-4392-9d61-d4761ef801b6.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7a3503e1-2fbf-433f-90cb-4f92f2da4b4e.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/1ab4bcdf-1f04-4c7a-b964-a29b2136b039.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/20236d50-c2de-4f08-a424-a1d0e8ae5ba8.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/35712be8-4564-47d5-9681-fa6cc47925bd.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "search_id": "13cf9213-83fb-4693-bbd7-4b936a85ad07",
                "system": "mljar-supervised"
            },
            "b4f902f2-c5f0-4207-bd76-64119e6b8c6e": {
                "description": "<supervised.iterative_learner_framework.IterativeLearner object at 0x7fa9977b4828>",
                "model": "Xgboost",
                "model_id": "b4f902f2-c5f0-4207-bd76-64119e6b8c6e",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/cdeaadc7-b384-4f57-9a44-b5d4551e5838.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/142b1549-36f2-4466-a35b-629fb3931507.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/56b5572b-2c22-439e-b908-cbcd94248130.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/3ebee457-bc7c-4d7e-a27e-7b09f7194d34.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/bb4a00b2-0d5b-4299-9e74-86161da29edc.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/971abebc-4105-49d1-98aa-2fed1ff58431.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b5c53c64-4b1c-4ed1-a1da-ee03fe029f2f.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/1b0c997f-adef-4315-994c-e1c5959dec5e.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9901852261825695
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0
                    }
                ],
                "search_id": "13cf9213-83fb-4693-bbd7-4b936a85ad07",
                "system": "mljar-supervised"
            },
            "e89bd8aa-83b9-4d6b-bc61-3c4d2533bec0": {
                "description": "<supervised.iterative_learner_framework.IterativeLearner object at 0x7fa996f96eb8>",
                "model": "Xgboost",
                "model_id": "e89bd8aa-83b9-4d6b-bc61-3c4d2533bec0",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/6ea60308-2396-4d28-99ad-5de269edc8c7.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/fa573f32-d9c3-44ed-8989-9ffb0e8b133d.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/6cd892b1-bdb3-44b3-8b03-a527ce5211cd.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/86cdea26-89b1-41e2-bbf8-3635bfd5f202.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/bab545ae-e87d-440b-aa8a-60737e870660.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e9e5773b-814c-43d4-a59a-9ee5b75a8336.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/30f1109a-c23a-4087-8e7e-cef613618ee0.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/54d5d17d-f3de-465e-b897-da13ebc1f612.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9901852261825695
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0
                    }
                ],
                "search_id": "13cf9213-83fb-4693-bbd7-4b936a85ad07",
                "system": "mljar-supervised"
            }
        },
        "rook": {},
        "tpot": {
            "0d06f5ee-d357-4454-854e-5ac0b3b2eaf0": {
                "description": "Pipeline(memory=None,\n     steps=[('xgbclassifier', XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n       colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,\n       max_depth=7, min_child_weight=7, missing=None, n_estimators=100,\n       n_jobs=1, nthread=1, objective='binary:logistic', random_state=0,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n       silent=True, subsample=0.35000000000000003))])",
                "model": "Pipeline",
                "model_id": "0d06f5ee-d357-4454-854e-5ac0b3b2eaf0",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9cb370c0-3793-4f5e-b23c-680b61bc08f1.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/009d3799-03d0-4330-9b49-c5110aa4c5ba.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5a8c247e-605e-4bbc-87fd-dc46c1514afb.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/718befaf-405f-446f-81d3-597660991016.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/68a410b0-934a-4328-9d1d-f88d24af7354.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/307a4149-a690-47c4-92a5-1cf522016baf.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f118af91-4e71-4856-a96f-b5f90fa424b6.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/72f647bf-684d-4fc6-aebd-31cbfa60d849.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.5238372054698369
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9862740757139694
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.08520420334059763
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.05214646536320214
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.05155299556174031
                    }
                ],
                "search_id": "d86df6f5-4a6e-4bd9-818d-356fdbc14ff2",
                "system": "tpot"
            },
            "c11d10c3-4780-4bd1-90ce-c66f9d582b19": {
                "description": "Pipeline(memory=None,\n     steps=[('stackingestimator', StackingEstimator(estimator=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',\n            max_depth=None, max_features=0.2, max_leaf_nodes=None,\n            min_impurity_decrease=0.0, min_impurity_split=None,\n            min_samples_leaf=12, ...i',\n           metric_params=None, n_jobs=None, n_neighbors=11, p=2,\n           weights='uniform'))])",
                "model": "Pipeline",
                "model_id": "c11d10c3-4780-4bd1-90ce-c66f9d582b19",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f363e586-b641-4941-9b4e-fd9f376ffaea.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/12e7bdd1-aa49-488a-9805-39da5306a5e3.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR12b_Gleditsch_Ward_Structural/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/bb12a879-e28c-4d52-a313-267d66886d6f.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d22f5273-1c6b-4613-9952-5733486c2c19.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/test/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/32b0330c-2486-4beb-bb13-abb4f963ed28.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5e16d591-08f9-4bc3-8a70-5177e140c8bc.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/train/ws_504/2019-11-10_23-25-37/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2cbd8ec8-1a05-4cbd-870d-35053cd018cb.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/90e83fbb-56c2-4452-a29f-4d079b7a5798.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR12b_Gleditsch_Ward_Structural/additional_inputs/partials/ws_504/2019-11-10_23-25-36/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "mido",
                        "value": 0.5245921053913716
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "mido",
                        "value": 0.9880451627186185
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "mido",
                        "value": 0.08277127405090882
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "mido",
                        "value": 0.051867157542015485
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "mido",
                        "value": 0.057263340562435976
                    }
                ],
                "search_id": "d86df6f5-4a6e-4bd9-818d-356fdbc14ff2",
                "system": "tpot"
            }
        }
    },
    "solverState": {
        "auto_sklearn": {
            "message": "search complete",
            "searchId": "c08abe93-357e-44fa-82aa-0ed1471155db",
            "thinking": false
        },
        "d3m": {
            "message": "searching for solutions",
            "searchId": "1",
            "thinking": true
        },
        "h2o": {
            "message": "search complete",
            "searchId": "969932c9-a607-4437-8c4f-96ac4955d5f0",
            "thinking": false
        },
        "mlbox": {
            "message": "search complete",
            "searchId": "7e734067-d8e0-495a-9b22-c8272889535c",
            "thinking": false
        },
        "mljar-supervised": {
            "message": "search complete",
            "searchId": "13cf9213-83fb-4693-bbd7-4b936a85ad07",
            "thinking": false
        },
        "tpot": {
            "message": "search complete",
            "searchId": "d86df6f5-4a6e-4bd9-818d-356fdbc14ff2",
            "thinking": false
        }
    },
    "splitsFile": "dataSplits.csv",
    "stratified": true,
    "subTask": "binary",
    "system": "solved",
    "tags": {
        "crossSection": [],
        "loose": [],
        "nominal": [],
        "time": [],
        "transformed": [],
        "weights": []
    },
    "targets": [
        "mido"
    ],
    "task": "classification",
    "timeBoundSearch": 10,
    "unedited": true
}