{
    "datasetIndices": {},
    "datasetPaths": {
        "all": "/ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv",
        "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv",
        "test": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv",
        "train": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
    },
    "datasetPathsManipulated": {},
    "datasetSchemas": {
        "all": "/ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/datasetDoc.json",
        "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/datasetDoc.json",
        "test": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/datasetDoc.json",
        "train": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/datasetDoc.json"
    },
    "datasetSchemasManipulated": {},
    "indices": {
        "all": [
            6036,
            8319,
            5867,
            8151,
            1175,
            6512,
            2610,
            2360,
            2220,
            4141,
            327,
            4595,
            4241,
            1993,
            3409,
            3691,
            6213,
            6979,
            1418,
            4021,
            5571,
            1397,
            3657,
            7674,
            328,
            2021,
            3793,
            4720,
            1225,
            6909,
            3695,
            6317,
            5990,
            3418,
            2112,
            2522,
            6507,
            7520,
            4855,
            6454,
            7765,
            5631,
            3740,
            5614,
            5755,
            2183,
            7501,
            5155,
            5590,
            259,
            7474,
            304,
            1607,
            2606,
            5433,
            7048,
            4715,
            4005,
            8229,
            7126,
            8326,
            3622,
            8124,
            5147,
            3136,
            3617,
            6090,
            1482,
            1715,
            6408,
            3296,
            2708,
            1632,
            1951,
            146,
            1108,
            5265,
            4695,
            2692,
            6508,
            2726,
            987,
            5246,
            3651,
            6911,
            1123,
            3905,
            6687,
            5575,
            5557,
            5783,
            5099,
            2129,
            2609,
            6636,
            117,
            5464,
            2678,
            3058,
            3471,
            4677,
            23,
            3937,
            8019,
            3636,
            1374,
            5231,
            3447,
            5779,
            6162,
            6114,
            2728,
            5548,
            7928,
            5243,
            915,
            6023,
            852,
            4383,
            4032,
            5276,
            4685,
            7040,
            3523,
            2654,
            2323,
            3026,
            1043,
            910,
            8121,
            6049,
            6526,
            7217,
            4071,
            1377,
            2616,
            4865,
            2626,
            4519,
            4045,
            3486,
            8087,
            3991,
            4551,
            1565,
            5514,
            7976,
            2141,
            1826,
            1492,
            1568,
            7605,
            3199,
            61,
            8149,
            7468,
            3588,
            5261,
            1926,
            5094,
            8052,
            2056,
            2390,
            5579,
            8040,
            1179,
            103,
            1989,
            1810,
            1326,
            611,
            2701,
            1047,
            2963,
            2956,
            3123,
            6727,
            779,
            3548,
            6622,
            3723,
            803,
            3652,
            7485,
            891,
            4084,
            5032,
            4819,
            5389,
            5375,
            4538,
            1711,
            7861,
            848,
            2329,
            4875,
            2415,
            3507,
            690,
            2103,
            7069,
            3894,
            7737,
            2719,
            6598,
            3727,
            7884,
            1133,
            584,
            7454,
            8194,
            827,
            6095,
            6585,
            2508,
            6866,
            3351,
            1432,
            6732,
            1330,
            2046,
            6484,
            3121,
            8113,
            4557,
            6586,
            1029,
            1063,
            4111,
            62,
            5370,
            1803,
            161,
            3333,
            4978,
            6340,
            5796,
            1127,
            2193,
            3433,
            2294,
            2693,
            1645,
            8304,
            2289,
            3268,
            4449,
            4501,
            5074,
            8233,
            2412,
            6171,
            3461,
            4914,
            952,
            2547,
            1069,
            8327,
            4436,
            3685,
            2264,
            3275,
            777,
            3621,
            6312,
            8367,
            6478,
            7936,
            7363,
            6834,
            6661,
            2015,
            7359,
            4682,
            164,
            3744,
            7342,
            3999,
            1375,
            4455,
            2862,
            3922,
            6726,
            3439,
            4671,
            7084,
            980,
            2833,
            4239,
            1204,
            6652,
            4216,
            2582,
            7182,
            7301,
            3256,
            365,
            2899,
            3927,
            5932,
            3035,
            379,
            1247,
            1771,
            6459,
            4217,
            7980,
            1774,
            175,
            3964,
            562,
            1753,
            7079,
            1786,
            5030,
            6146,
            6147,
            5730,
            7764,
            507,
            2175,
            4237,
            4195,
            2752,
            772,
            4905,
            6163,
            1164,
            5356,
            7869,
            7512,
            6008,
            2968,
            5886,
            7325,
            6985,
            7262,
            6080,
            1106,
            7403,
            4873,
            2733,
            1794,
            4379,
            2427,
            979,
            3738,
            2812,
            5244,
            3933,
            3239,
            2250,
            7495,
            4078,
            2545,
            588,
            4521,
            1085,
            6325,
            8168,
            2552,
            6938,
            7471,
            5461,
            3546,
            2929,
            2462,
            5063,
            1637,
            3614,
            7941,
            2759,
            1407,
            7807,
            921,
            3732,
            3681,
            8123,
            8101,
            1988,
            2765,
            7539,
            6589,
            53,
            580,
            1379,
            2649,
            479,
            755,
            1109,
            7457,
            4674,
            5738,
            246,
            274,
            4082,
            3775,
            677,
            4227,
            1037,
            7035,
            2824,
            1066,
            5498,
            7490,
            4546,
            2316,
            6488,
            6078,
            7880,
            4181,
            7544,
            5366,
            6836,
            7348,
            5668,
            4945,
            1787,
            8155,
            811,
            6867,
            4684,
            1935,
            7927,
            5660,
            3079,
            3832,
            7811,
            4248,
            1448,
            2059,
            1698,
            7238,
            5003,
            6217,
            4336,
            4770,
            4504,
            5543,
            1485,
            2196,
            8400,
            4508,
            5496,
            2498,
            3717,
            1095,
            2542,
            5912,
            4015,
            5340,
            5929,
            1131,
            3669,
            8120,
            1944,
            4077,
            3282,
            452,
            6160,
            1322,
            3276,
            5058,
            6187,
            2528,
            614,
            5951,
            6227,
            8263,
            7322,
            1574,
            2247,
            6705,
            8340,
            7562,
            8298,
            2762,
            3131,
            5297,
            742,
            5624,
            4002,
            3027,
            2971,
            474,
            4001,
            1532,
            7192,
            2943,
            2488,
            1838,
            4971,
            2517,
            4404,
            4156,
            2675,
            5770,
            6207,
            4316,
            2842,
            7698,
            1118,
            6205,
            2188,
            2135,
            7018,
            1654,
            3978,
            364,
            7134,
            2035,
            3981,
            499,
            7132,
            4629,
            1064,
            1506,
            4955,
            762,
            5146,
            1832,
            5921,
            2458,
            7968,
            8290,
            1557,
            1480,
            6607,
            4377,
            4101,
            4198,
            1297,
            5310,
            2776,
            3590,
            2326,
            4391,
            1924,
            7258,
            4331,
            7358,
            1419,
            1667,
            33,
            7185,
            4678,
            7210,
            90,
            4939,
            3830,
            2613,
            757,
            5256,
            1862,
            1584,
            4758,
            3233,
            6943,
            2127,
            4096,
            2783,
            5097,
            1925,
            1976,
            7227,
            4901,
            4382,
            1525,
            3200,
            2177,
            6978,
            4799,
            7699,
            5618,
            556,
            6468,
            8398,
            7133,
            6179,
            8139,
            148,
            1927,
            8268,
            7434,
            3749,
            1996,
            6278,
            5818,
            1587,
            5775,
            2123,
            6980,
            970,
            2235,
            599,
            6256,
            1829,
            7360,
            7200,
            949,
            3606,
            6745,
            5642,
            1306,
            220,
            6731,
            7455,
            8013,
            3524,
            8300,
            2475,
            5308,
            6230,
            1767,
            4299,
            2942,
            5453,
            3327,
            4314,
            3274,
            5015,
            2935,
            7186,
            3336,
            288,
            8065,
            4751,
            183,
            3072,
            4648,
            1305,
            4092,
            679,
            969,
            6490,
            5351,
            3375,
            4464,
            898,
            988,
            1590,
            7338,
            1807,
            4307,
            7333,
            4937,
            7378,
            5546,
            199,
            739,
            6932,
            5066,
            2213,
            1850,
            7755,
            7553,
            1581,
            2875,
            1680,
            4255,
            1638,
            2431,
            2530,
            8012,
            4441,
            888,
            2016,
            5936,
            7549,
            6756,
            6947,
            2757,
            5011,
            3104,
            3984,
            1789,
            41,
            5896,
            296,
            5142,
            1471,
            3541,
            5721,
            3178,
            7340,
            2374,
            2639,
            2793,
            1527,
            1142,
            295,
            1949,
            7100,
            7675,
            4296,
            2511,
            3160,
            3236,
            4647,
            6096,
            6081,
            7422,
            2526,
            1486,
            2386,
            7852,
            7380,
            389,
            5035,
            2669,
            5934,
            2682,
            3700,
            219,
            5411,
            7498,
            8057,
            6742,
            7526,
            2532,
            8296,
            984,
            1310,
            2039,
            7732,
            2383,
            7273,
            3914,
            3887,
            3915,
            5549,
            3776,
            7740,
            4979,
            7208,
            2355,
            6735,
            1314,
            7413,
            5465,
            1815,
            4853,
            3164,
            2561,
            7191,
            4851,
            587,
            6617,
            2231,
            4984,
            6458,
            6453,
            206,
            4900,
            1077,
            1153,
            6646,
            3211,
            730,
            284,
            4556,
            2157,
            7929,
            5644,
            5537,
            8241,
            4543,
            4812,
            6645,
            5069,
            1429,
            2058,
            1031,
            5801,
            6440,
            6631,
            3132,
            5937,
            244,
            954,
            3115,
            2697,
            3593,
            8160,
            4339,
            4885,
            6123,
            7492,
            3438,
            3660,
            1017,
            6743,
            5420,
            7174,
            1863,
            3153,
            5075,
            1060,
            5615,
            7845,
            1003,
            6620,
            2019,
            5876,
            3137,
            962,
            1417,
            3064,
            6864,
            1360,
            3780,
            99,
            3599,
            1696,
            8324,
            975,
            6142,
            573,
            2330,
            2230,
            4020,
            4735,
            2358,
            7441,
            5429,
            4655,
            6551,
            6406,
            3511,
            2951,
            186,
            5267,
            122,
            5241,
            760,
            3110,
            5517,
            3782,
            801,
            7983,
            6020,
            2618,
            989,
            6472,
            2808,
            1129,
            5780,
            4616,
            2758,
            6482,
            851,
            5248,
            4118,
            4837,
            14,
            4113,
            309,
            1420,
            7314,
            3158,
            7293,
            7392,
            8016,
            260,
            1051,
            2216,
            7443,
            8375,
            4494,
            6567,
            6280,
            3925,
            3208,
            166,
            7963,
            1559,
            7951,
            1416,
            5150,
            7259,
            6955,
            2822,
            42,
            7716,
            4247,
            2491,
            7663,
            3003,
            1740,
            376,
            3792,
            7085,
            2960,
            6337,
            5924,
            809,
            7985,
            2763,
            6570,
            4223,
            3948,
            5965,
            2992,
            1018,
            3587,
            2109,
            8045,
            5647,
            3582,
            6541,
            8192,
            6714,
            4499,
            7013,
            6192,
            1372,
            2199,
            7857,
            6957,
            7506,
            567,
            3169,
            7891,
            1115,
            5968,
            4260,
            1389,
            2600,
            7863,
            2480,
            7727,
            5881,
            5110,
            3820,
            6995,
            4660,
            892,
            5830,
            771,
            5332,
            5899,
            5999,
            1349,
            8368,
            2493,
            5945,
            6500,
            1151,
            6701,
            2263,
            3852,
            1458,
            3127,
            1359,
            8033,
            2352,
            1208,
            942,
            781,
            7031,
            4342,
            6306,
            5817,
            5600,
            6555,
            6174,
            1244,
            3013,
            5279,
            2870,
            3627,
            7001,
            5737,
            7972,
            7509,
            2328,
            1939,
            6156,
            2707,
            972,
            8073,
            346,
            471,
            6946,
            4625,
            7558,
            7016,
            6929,
            5039,
            6759,
            4996,
            1172,
            7176,
            7209,
            7189,
            4769,
            3172,
            5888,
            6103,
            1858
        ],
        "test": [
            6855,
            7172,
            7284,
            6869,
            6937,
            7221,
            6954,
            7209,
            7225,
            7238,
            7048,
            7241,
            7208,
            7260,
            6878,
            7154,
            6973,
            7307,
            6990,
            7189,
            6967,
            6882,
            6897,
            7099,
            7128,
            7249,
            6904,
            7119,
            6947,
            7269,
            7102,
            7014,
            7064,
            6939,
            7228,
            7144,
            7263,
            7131,
            7086,
            6896,
            6958,
            6858,
            7191,
            6857,
            7025,
            7104,
            6889,
            7164,
            6929,
            7124,
            7151,
            7080,
            7266,
            7141,
            7011,
            6970,
            7192,
            7262,
            7150,
            6911,
            7017,
            6959,
            6866,
            7037,
            6932,
            7027,
            7258,
            6893,
            7163,
            7097,
            6852,
            7088,
            7182,
            6956,
            6914,
            7280,
            7273,
            6880,
            6865,
            7278,
            6856,
            6957,
            7250,
            7185,
            7183,
            7299,
            6870,
            6922,
            6895,
            7279,
            7039,
            7245,
            7107,
            6859,
            7095,
            7072,
            6842,
            7178,
            7109,
            6975,
            6847,
            7096,
            7041,
            7272,
            6927,
            7206,
            6891,
            7291,
            7103,
            7232,
            7274,
            7050,
            7020,
            7205,
            7157,
            7018,
            6923,
            7067,
            6985,
            6838,
            6916,
            7223,
            7275,
            7054,
            7145,
            7257,
            7253,
            7126,
            7301,
            6962,
            6941,
            7271,
            6860,
            7176,
            7230,
            7283,
            7105,
            7091,
            6843,
            7132,
            7042,
            7130,
            7270,
            6974,
            7045,
            7196,
            7009,
            6874,
            7212,
            7293,
            7070,
            7049,
            6963,
            6890,
            6861,
            7304,
            7306,
            6853,
            7287,
            7213,
            7168,
            7201,
            7215,
            7222,
            6888,
            7159,
            6862,
            7220,
            7256,
            7029,
            6933,
            6983,
            6871,
            6883,
            7052,
            6972,
            6976,
            7202,
            6832,
            7075,
            6988,
            6898,
            6951,
            6834,
            6968,
            7084,
            7240,
            7030,
            7083,
            7101,
            7186,
            7210,
            7093,
            7147,
            7040,
            7265,
            7074,
            7285,
            6839,
            7216,
            7158,
            6926,
            7082,
            7214,
            7008,
            6964,
            7108,
            7135,
            7282,
            7207,
            7180,
            6984,
            7046,
            7199,
            7003,
            7171,
            7005,
            6938,
            6917,
            7024,
            7022,
            6872,
            6979,
            6887,
            7174,
            7142,
            6960,
            7197,
            7013,
            6844,
            7129,
            6925,
            6943,
            7153,
            7229,
            7187,
            7289,
            6919,
            6876,
            7242,
            7106,
            7198,
            7252,
            7006,
            7007,
            7167,
            6997,
            7035,
            7073,
            6863,
            7254,
            6846,
            7057,
            7305,
            7148,
            7170,
            7090,
            7203,
            6942,
            6848,
            6981,
            7056,
            6886,
            6884,
            6991,
            6928,
            7193,
            7136,
            7051,
            7140,
            7235,
            6936,
            7079,
            7069,
            7076,
            7227,
            7122,
            7231,
            7300,
            7179,
            7110,
            7071,
            7001,
            6986,
            7059,
            6971,
            7268,
            7068,
            7195,
            6945,
            6966,
            6908,
            6931,
            6982,
            7200,
            6930,
            6836,
            6995,
            6837,
            7092,
            7138,
            6949,
            7134,
            6993,
            6920,
            7303,
            6868,
            7251,
            6989,
            7094,
            7276,
            6978,
            7243,
            6915,
            6905,
            7058,
            6992,
            7023,
            7277,
            6950,
            6906,
            7290,
            6877,
            6912,
            6913,
            6935,
            6849,
            7019,
            6918,
            6953,
            7121,
            6921,
            6924,
            7089,
            7184,
            7139,
            6955,
            6854,
            7248,
            7028,
            7146,
            6873,
            6980,
            7077,
            7239,
            6879,
            7004,
            7010,
            6934,
            7165,
            7162,
            6999,
            7123,
            7244,
            7161,
            7053,
            7156,
            7033,
            6910,
            7160,
            7152,
            7219,
            6987,
            7211,
            7302,
            7066,
            7237,
            6909,
            6994,
            7085,
            6948,
            7112,
            6864,
            7155,
            6940,
            7173,
            7288,
            6885,
            7031,
            6892,
            6841,
            7137,
            6833,
            6969,
            7204,
            7267,
            7149,
            7043,
            7078,
            7055,
            7016,
            7002,
            7234,
            7233,
            7026,
            7246,
            7133,
            7015,
            6944,
            7226,
            7286,
            6867,
            6961,
            7000,
            7224,
            7175,
            7194,
            6840,
            7098,
            7036,
            6998,
            7111,
            7247,
            6845,
            7120,
            7081,
            6881,
            6875,
            7259,
            7292,
            7166,
            7125,
            6835,
            6907,
            7281,
            7100,
            7143,
            7217,
            7113,
            7261,
            7087,
            7021,
            6946,
            7264,
            6894,
            7038,
            6952,
            7177,
            7032,
            7181,
            6977,
            6851,
            7044,
            6996,
            7065,
            7218,
            6965,
            7034,
            7190,
            7127,
            7047
        ],
        "train": [
            1170,
            4643,
            1808,
            5245,
            6273,
            2360,
            3857,
            1058,
            4849,
            4724,
            1973,
            2646,
            1748,
            4633,
            3819,
            2890,
            3653,
            3758,
            4518,
            5894,
            1791,
            1323,
            5985,
            6194,
            2844,
            4275,
            4694,
            4936,
            319,
            5266,
            622,
            4755,
            584,
            3954,
            1573,
            2749,
            4521,
            2148,
            1530,
            3988,
            2769,
            1077,
            1702,
            1133,
            312,
            1430,
            6278,
            6092,
            1061,
            2351,
            1547,
            6256,
            1068,
            4776,
            6173,
            4874,
            830,
            2644,
            6446,
            2784,
            97,
            4333,
            200,
            3511,
            5762,
            2575,
            781,
            1456,
            898,
            1032,
            4497,
            199,
            2147,
            5408,
            2120,
            918,
            2638,
            2010,
            2023,
            1094,
            5870,
            4342,
            3383,
            2814,
            5825,
            3110,
            5696,
            3716,
            3321,
            2567,
            5941,
            5841,
            4450,
            893,
            4387,
            4017,
            6437,
            1424,
            4174,
            6282,
            3551,
            844,
            3907,
            4535,
            4234,
            2934,
            5320,
            785,
            5276,
            3560,
            6712,
            4650,
            4807,
            2523,
            4611,
            143,
            6324,
            738,
            4945,
            4994,
            2180,
            4258,
            4453,
            6458,
            3843,
            5321,
            1612,
            2377,
            4604,
            2937,
            253,
            3098,
            2441,
            5600,
            1580,
            679,
            2532,
            2707,
            136,
            3523,
            4438,
            593,
            4469,
            6035,
            3488,
            5834,
            1528,
            5938,
            4739,
            5247,
            966,
            6137,
            3122,
            375,
            2451,
            5174,
            5368,
            4437,
            5101,
            5062,
            796,
            4396,
            4314,
            6729,
            3349,
            1925,
            583,
            4116,
            924,
            676,
            6280,
            1977,
            2613,
            3851,
            3673,
            464,
            6393,
            940,
            5013,
            3341,
            2598,
            2682,
            2388,
            980,
            3196,
            4553,
            4303,
            5767,
            3352,
            2752,
            4941,
            2894,
            14,
            758,
            176,
            3163,
            4197,
            4476,
            3603,
            3505,
            115,
            3601,
            5267,
            6444,
            965,
            4870,
            6429,
            5627,
            4271,
            4485,
            1606,
            2034,
            6117,
            4647,
            6245,
            3145,
            2258,
            3386,
            3252,
            3469,
            822,
            6335,
            3582,
            6156,
            6743,
            1141,
            6153,
            820,
            2248,
            3064,
            1545,
            5073,
            826,
            1052,
            6530,
            3326,
            188,
            3927,
            6199,
            1861,
            6575,
            453,
            1486,
            1557,
            689,
            1480,
            3721,
            1645,
            4692,
            6094,
            2808,
            848,
            4456,
            339,
            5791,
            3766,
            3402,
            74,
            2250,
            6687,
            4588,
            3493,
            5837,
            1733,
            2364,
            5559,
            5678,
            5935,
            1416,
            1770,
            4208,
            1138,
            6176,
            1499,
            3291,
            2327,
            4933,
            2967,
            5075,
            6587,
            3997,
            801,
            3942,
            2539,
            6116,
            3141,
            1211,
            558,
            4528,
            2556,
            2653,
            2726,
            5806,
            1433,
            6009,
            434,
            2571,
            3546,
            4838,
            506,
            6259,
            1229,
            1991,
            5419,
            6580,
            3967,
            3172,
            1813,
            3107,
            3413,
            4062,
            5569,
            1210,
            388,
            3702,
            3867,
            618,
            2456,
            5307,
            3768,
            1368,
            6649,
            146,
            1964,
            1418,
            6512,
            6103,
            3891,
            277,
            5759,
            6025,
            3147,
            4718,
            2940,
            2244,
            4961,
            216,
            3353,
            2592,
            164,
            3995,
            3025,
            2271,
            2565,
            4332,
            1479,
            2135,
            6647,
            4035,
            4428,
            6336,
            5251,
            6562,
            4178,
            2512,
            1455,
            5641,
            5756,
            6709,
            140,
            4201,
            4676,
            5110,
            6551,
            1149,
            5746,
            3521,
            6677,
            4844,
            5557,
            1151,
            5815,
            6420,
            3710,
            1663,
            4171,
            4672,
            1952,
            4367,
            752,
            2577,
            1805,
            5535,
            6293,
            739,
            3845,
            4729,
            6576,
            1729,
            809,
            3382,
            1801,
            5530,
            5868,
            5948,
            5514,
            3642,
            1348,
            44,
            4390,
            2733,
            6303,
            4283,
            2333,
            5623,
            5543,
            1634,
            5349,
            2783,
            3181,
            2299,
            1222,
            6131,
            5229,
            2970,
            2121,
            808,
            2879,
            3682,
            814,
            5540,
            245,
            1055,
            5660,
            4210,
            564,
            6736,
            1975,
            994,
            2123,
            3180,
            5445,
            4523,
            6529,
            2238,
            1377,
            89,
            1120,
            6757,
            4567,
            3584,
            5646,
            5157,
            6620,
            3254,
            2710,
            3020,
            2518,
            857,
            4119,
            4012,
            1231,
            3432,
            5369,
            3762,
            3239,
            261,
            3129,
            2976,
            4768,
            725,
            5801,
            5093,
            2667,
            5780,
            3776,
            3356,
            6628,
            4099,
            3513,
            4248,
            6544,
            3116,
            127,
            5069,
            148,
            5171,
            852,
            6403,
            1137,
            3028,
            3015,
            2958,
            6697,
            4527,
            2283,
            2717,
            2658,
            4405,
            5149,
            1929,
            2655,
            1473,
            5257,
            1859,
            3565,
            5140,
            2747,
            4414,
            2756,
            3636,
            3069,
            1096,
            5594,
            3434,
            6285,
            2519,
            6081,
            5914,
            2636,
            2300,
            5810,
            2758,
            2506,
            677,
            6492,
            5629,
            6405,
            2139,
            4354,
            4769,
            387,
            4742,
            6629,
            4612,
            991,
            2524,
            5240,
            1750,
            3713,
            2718,
            2681,
            1652,
            4182,
            5588,
            122,
            342,
            1477,
            2887,
            2748,
            3412,
            4297,
            4760,
            4539,
            5621,
            2144,
            3530,
            172,
            1826,
            810,
            5705,
            2021,
            2182,
            3403,
            4514,
            4783,
            3213,
            6499,
            3990,
            3853,
            1459,
            3429,
            5511,
            5440,
            609,
            1419,
            6046,
            4157,
            5939,
            5100,
            5712,
            681,
            1183,
            4170,
            1375,
            4159,
            5609,
            613,
            184,
            2700,
            2022,
            2868,
            4140,
            4641,
            3136,
            4993,
            6436,
            1670,
            6553,
            4079,
            6283,
            2534,
            4837,
            3580,
            1622,
            1345,
            695,
            6322,
            3619,
            3611,
            1037,
            4975,
            5727,
            6272,
            1546,
            4606,
            6100,
            4879,
            2899,
            678,
            1589,
            1006,
            321,
            5487,
            5508,
            4164,
            2187,
            4338,
            3962,
            5454,
            5088,
            5781,
            2917,
            4380,
            1296,
            6227,
            4693,
            2557,
            259,
            5386,
            4478,
            296,
            5485,
            2572,
            4434,
            5480,
            2025,
            3010,
            2328,
            4655,
            2346,
            6281,
            3814,
            4073,
            5624,
            2409,
            4610,
            2124,
            5758,
            6474,
            4273,
            3106,
            3796,
            3973,
            4070,
            6702,
            5422,
            1600,
            5740,
            3711,
            389,
            3198,
            3135,
            1463,
            3118,
            2357,
            3072,
            3669,
            2106,
            6658,
            3162,
            3016,
            239,
            3824,
            4379,
            604,
            1696,
            5011,
            1325,
            1317,
            1644,
            3309,
            3195,
            224,
            1415,
            1809,
            2651,
            2302,
            1139,
            5653,
            762,
            1990,
            1297,
            5393,
            5145,
            4404,
            3958,
            6121,
            5662,
            3934,
            5970,
            3418,
            5486,
            5401,
            6165,
            2881,
            5999,
            3763,
            3442,
            3887,
            4263,
            4823,
            4382,
            1105,
            3556,
            5954,
            6070,
            6652,
            4227,
            1412,
            4207,
            5022,
            4597,
            509,
            2813,
            2804,
            1240,
            5683,
            1669,
            5265,
            4436,
            3218,
            4745,
            3720,
            3138,
            120,
            106,
            468,
            5589,
            4971,
            2100,
            1329,
            1014,
            6604,
            3325,
            302,
            4732,
            2162,
            846,
            3492,
            1185,
            1226,
            3456,
            787,
            6254,
            1371,
            6212,
            6473,
            2607,
            255,
            2750,
            461,
            5352,
            4369,
            1599,
            3724,
            4077,
            1790,
            1420,
            1602,
            1570,
            850,
            3799,
            4496,
            4315,
            1352,
            5335,
            2374,
            2376,
            3416,
            294,
            761,
            1437,
            2897,
            6172,
            2865,
            2956,
            3078,
            5633,
            3331,
            1560,
            4397,
            4134,
            2885,
            1122,
            5634,
            4304,
            6210,
            3761,
            1478,
            1711,
            3911,
            1996,
            2474,
            4384,
            4155,
            6685,
            586,
            114,
            15,
            2203,
            6664,
            4377,
            2370,
            827,
            2614,
            4435,
            5446,
            4421,
            4281,
            2116,
            2863,
            673,
            2639,
            1083,
            1632,
            6236,
            2426,
            454,
            4002,
            4723,
            3739,
            5794,
            1981,
            2805,
            3960,
            840,
            2693,
            6767,
            616,
            2013,
            713,
            3971,
            3703,
            1742,
            4477,
            2410,
            4361,
            3662,
            458,
            3495,
            4878,
            3626,
            5940,
            449,
            5732,
            4308,
            2525,
            1207,
            5517,
            3300,
            704,
            3294,
            4512,
            2902,
            3179,
            818,
            1963,
            6086,
            5676,
            1922,
            1661,
            6413,
            1360,
            2702,
            5416,
            4045,
            4495,
            2117,
            485,
            4863,
            1484,
            168,
            3902,
            121,
            5777,
            2214,
            3571,
            6325,
            4857,
            2487,
            3134,
            488,
            771,
            2832,
            6623,
            5805,
            6039,
            4316,
            1620,
            6671,
            3276,
            5008,
            43,
            6396,
            3420,
            3060,
            4483,
            2875,
            2405,
            6662,
            945,
            4548,
            2270,
            5665,
            2684,
            4719,
            3281,
            4862,
            2125,
            4888,
            5025,
            4060,
            5148,
            5242,
            6000,
            1865,
            5397,
            6610,
            5608,
            3832,
            3125,
            4812,
            1365,
            6195,
            3467,
            4415,
            2480,
            4618,
            4383,
            5966,
            1009,
            1287,
            4766,
            2931,
            4319,
            3749,
            2544,
            2224,
            6337,
            3947,
            4598,
            612,
            2930,
            2776,
            6026,
            1029,
            5324,
            5903,
            5925,
            5417,
            6637,
            2775,
            5573,
            2109,
            2878,
            4601,
            6642,
            5078,
            291,
            5722,
            4356,
            5090,
            1434,
            6183,
            1667,
            5436,
            5950,
            4817,
            5424,
            4775,
            4848,
            4033,
            3986,
            3229,
            3755,
            6186,
            236,
            336,
            4619,
            4908,
            4276,
            1243,
            5319,
            721,
            6726,
            6314,
            1867,
            3121,
            334
        ]
    },
    "manipulations": [],
    "meaningful": false,
    "metric": "rocAuc",
    "metrics": [
        "accuracy",
        "precision",
        "recall",
        "f1"
    ],
    "pending": false,
    "predictors": [
        "log(wdi.pop)",
        "log1p(age)",
        "postcoldwar",
        "ios.iccpr1",
        "nld.any.1",
        "pitfdem",
        "I(pitfdem * nld.any.1)",
        "I(postcoldwar * nld.any.1)",
        "as.factor(fiw.cl)",
        "log1p(pol.durable)",
        "log1p(cou.tries5)"
    ],
    "problemID": "problem 0",
    "provenanceID": "TR10e_Chen_Ulf_Political_Opportunity_problem_TRAIN",
    "scoreOptions": {
        "evaluationMethod": "kFold",
        "folds": 10,
        "splitsFile": "dataSplits.csv",
        "stratified": true,
        "trainTestRatio": 0.35
    },
    "searchOptions": {
        "solutionsLimit": 5,
        "timeBoundSearch": 10
    },
    "selectedSolutions": {
        "d3m": [],
        "h2o": [
            "86b3542f-eaa5-40a6-b979-29a947af3770"
        ],
        "mlbox": [],
        "mljar-supervised": [],
        "tpot": []
    },
    "solutions": {
        "d3m": {
            "29304": {
                "created": "2019-11-13T09:43:06.751566+00:00",
                "details_url": "/d3m-service/stored-response/7e23b317db6b95657fb63e8dfa12c5ca78d5f8d1ebe32b03c0afb56f",
                "hash_id": "7e23b317db6b95657fb63e8dfa12c5ca78d5f8d1ebe32b03c0afb56f",
                "id": 29304,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-13T09:43:06.790187+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "1",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.1.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "fddf9d4f8ed4adff089c90181c5d2bb76198ce45ecd54c2386d2544443f59917",
                                    "id": "36d5472c-e0a4-4ed6-a1d0-2665feacff39",
                                    "name": "Mean Baseline",
                                    "pythonPath": "d3m.primitives.classification.gaussian_classification.MeanBaseline",
                                    "version": "1.5.5"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 29304,
                "produce": {
                    "all": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/63945b0e-01fc-48cf-bb87-c82c0a6ee726.csv",
                    "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/5e5c5d01-d359-43c9-8fdc-56ff2cba1b67.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9794745445251465
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "29311": {
                "created": "2019-11-13T09:43:08.393958+00:00",
                "details_url": "/d3m-service/stored-response/63b83436109701fcbd87d4f7dba048accc0cbb76b86d8486146e9ae1",
                "hash_id": "63b83436109701fcbd87d4f7dba048accc0cbb76b86d8486146e9ae1",
                "id": 29311,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-13T09:43:08.412927+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "4",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.1.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "fddf9d4f8ed4adff089c90181c5d2bb76198ce45ecd54c2386d2544443f59917",
                                    "id": "36d5472c-e0a4-4ed6-a1d0-2665feacff39",
                                    "name": "Mean Baseline",
                                    "pythonPath": "d3m.primitives.classification.gaussian_classification.MeanBaseline",
                                    "version": "1.5.5"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 29311,
                "produce": {
                    "all": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/455a6771-c025-43be-bedf-2607b42b2195.csv",
                    "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/ad37ae1a-e016-4e31-98bd-0d797d112e99.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9794745445251465
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "29332": {
                "created": "2019-11-13T09:43:12.677892+00:00",
                "details_url": "/d3m-service/stored-response/07e7e1a960a9439738657878d7e76d03e11c84d798b7d2a6abfe917e",
                "hash_id": "07e7e1a960a9439738657878d7e76d03e11c84d798b7d2a6abfe917e",
                "id": 29332,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-13T09:43:12.702733+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "7",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.8.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "bootstrap": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": false
                                                }
                                            }
                                        }
                                    },
                                    "criterion": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "gini"
                                                }
                                            }
                                        }
                                    },
                                    "max_depth": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "8"
                                                }
                                            }
                                        }
                                    },
                                    "min_samples_leaf": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "min_samples_split": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "2"
                                                }
                                            }
                                        }
                                    },
                                    "n_estimators": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "23"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "warm_start": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d8571a6f70248ceba46c2231a0afeaebaced127bdd7b0ebf087367461c0ad09d",
                                    "id": "1dd82833-5692-39cb-84fb-2455683075f3",
                                    "name": "sklearn.ensemble.forest.RandomForestClassifier",
                                    "pythonPath": "d3m.primitives.classification.random_forest.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 29332,
                "produce": {
                    "all": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/e4da87a4-de2f-430c-af1c-1a25a812cb73.csv",
                    "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/e3f68536-22e8-4369-9af9-df27171351bb.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5030555069446564
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9797482490539551
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 1
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.013333333656191826
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.02631578966975212
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "29334": {
                "created": "2019-11-13T09:43:13.500448+00:00",
                "details_url": "/d3m-service/stored-response/3ee017ad7b5e74bfb222f85df3a39a5ca0a3002412a17380f0d9a175",
                "hash_id": "3ee017ad7b5e74bfb222f85df3a39a5ca0a3002412a17380f0d9a175",
                "id": 29334,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-13T09:43:13.522589+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "8",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.8.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "bootstrap": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": false
                                                }
                                            }
                                        }
                                    },
                                    "criterion": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "gini"
                                                }
                                            }
                                        }
                                    },
                                    "max_depth": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "8"
                                                }
                                            }
                                        }
                                    },
                                    "min_samples_leaf": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "3"
                                                }
                                            }
                                        }
                                    },
                                    "min_samples_split": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "2"
                                                }
                                            }
                                        }
                                    },
                                    "n_estimators": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "23"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "warm_start": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d8571a6f70248ceba46c2231a0afeaebaced127bdd7b0ebf087367461c0ad09d",
                                    "id": "1dd82833-5692-39cb-84fb-2455683075f3",
                                    "name": "sklearn.ensemble.forest.RandomForestClassifier",
                                    "pythonPath": "d3m.primitives.classification.random_forest.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 29334,
                "produce": {
                    "all": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/a1c3220b-eebd-491a-9fb8-fa1df2ca1eac.csv",
                    "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/0be29c0a-e0f2-4c86-a59c-a37b294a6c89.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5030555069446564
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.979885071516037
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 1
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.02000000048428774
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.03913192078471184
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "29360": {
                "created": "2019-11-13T09:43:24.962088+00:00",
                "details_url": "/d3m-service/stored-response/48fedabed8123cbc9e97d481182635ac0da0bebda4528bba8dfcd552",
                "hash_id": "48fedabed8123cbc9e97d481182635ac0da0bebda4528bba8dfcd552",
                "id": 29360,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-13T09:43:24.987612+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "13",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.8.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "n_neighbors": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "1"
                                                }
                                            }
                                        }
                                    },
                                    "p": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "1"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "weights": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "distance"
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "13147d120ee15b7c2863228a17390fc892b674fb82f928e9ac8bbdfe7238fa32",
                                    "id": "754f7210-a0b7-3b7a-8c98-f43c7b663d28",
                                    "name": "sklearn.neighbors.classification.KNeighborsClassifier",
                                    "pythonPath": "d3m.primitives.classification.k_neighbors.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 29360,
                "produce": {
                    "all": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/c816a537-52b3-4068-8186-b63f5f69085e.csv",
                    "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/bbd247ab-3eee-441e-8f73-c91d4ed839c9.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5261892080307007
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9968527555465698
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9357142746448517
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9066666662693024
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.9206896424293518
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            },
            "29362": {
                "created": "2019-11-13T09:43:25.204686+00:00",
                "details_url": "/d3m-service/stored-response/44aedbb25539ad70a1de62484d32c3a4c003cdca650e3490cca9ec27",
                "hash_id": "44aedbb25539ad70a1de62484d32c3a4c003cdca650e3490cca9ec27",
                "id": 29362,
                "is_error": false,
                "is_finished": true,
                "modified": "2019-11-13T09:43:25.222982+00:00",
                "pipeline": {
                    "context": "EVALUATION",
                    "description": "",
                    "digest": "",
                    "id": "14",
                    "inputs": [
                        {
                            "name": "input dataset"
                        }
                    ],
                    "name": "",
                    "outputs": [
                        {
                            "data": "steps.8.produce",
                            "name": "output"
                        }
                    ],
                    "steps": [
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "inputs.0"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "6a80776d244347f0d29f4358df1cd0286c25f67e03a7e2ee517c6e853e6a9d1f",
                                    "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                                    "name": "Denormalize datasets",
                                    "pythonPath": "d3m.primitives.data_transformation.denormalize.Common",
                                    "version": "0.2.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.0.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "a141e6821de7ae586968b0986237745a5510850e6940cf946db9d50d3828b030",
                                    "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                                    "name": "Extract a DataFrame from a Dataset",
                                    "pythonPath": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.1.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "parse_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d95eb0ea8a5e6f9abc0965a97e9c4f5d8f74a3df591c11c4145faea3e581cd06",
                                    "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                                    "name": "Parses strings into their types",
                                    "pythonPath": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                                    "version": "0.5.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/Attribute"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.3.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "list": {
                                                        "items": [
                                                            {
                                                                "string": "http://schema.org/Integer"
                                                            },
                                                            {
                                                                "string": "http://schema.org/Float"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "2dda31ef0452060bc55070204c5328927e2b2537a03afa6333607e3e4828ab26",
                                    "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                                    "name": "Extracts columns by semantic type",
                                    "pythonPath": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.5.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "strategy": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "mean"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "d6902b0ef72b4cd6fc5f79054f7a534404c708e1244e94a2713a9dd525c78eed",
                                    "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                                    "name": "sklearn.impute.SimpleImputer",
                                    "pythonPath": "d3m.primitives.data_cleaning.imputer.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.6.produce"
                                        }
                                    },
                                    "outputs": {
                                        "container": {
                                            "data": "steps.4.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "n_neighbors": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "1"
                                                }
                                            }
                                        }
                                    },
                                    "p": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "int64": "1"
                                                }
                                            }
                                        }
                                    },
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    },
                                    "weights": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "string": "distance"
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "13147d120ee15b7c2863228a17390fc892b674fb82f928e9ac8bbdfe7238fa32",
                                    "id": "754f7210-a0b7-3b7a-8c98-f43c7b663d28",
                                    "name": "sklearn.neighbors.classification.KNeighborsClassifier",
                                    "pythonPath": "d3m.primitives.classification.k_neighbors.SKlearn",
                                    "version": "2019.6.7"
                                },
                                "users": []
                            }
                        },
                        {
                            "primitive": {
                                "arguments": {
                                    "inputs": {
                                        "container": {
                                            "data": "steps.7.produce"
                                        }
                                    },
                                    "reference": {
                                        "container": {
                                            "data": "steps.2.produce"
                                        }
                                    }
                                },
                                "hyperparams": {
                                    "use_semantic_types": {
                                        "value": {
                                            "data": {
                                                "raw": {
                                                    "bool": true
                                                }
                                            }
                                        }
                                    }
                                },
                                "outputs": [
                                    {
                                        "id": "produce"
                                    }
                                ],
                                "primitive": {
                                    "digest": "96382129c2d9e87a2c0ab0b477b410947e5644d4dfae24e905d16a72d32dc41b",
                                    "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                                    "name": "Construct pipeline predictions output",
                                    "pythonPath": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                                    "version": "0.3.0"
                                },
                                "users": []
                            }
                        }
                    ],
                    "users": []
                },
                "pipelineId": 29362,
                "produce": {
                    "all": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/5ce9dd8b-3f03-477b-ad74-1d4a3e330e2d.csv",
                    "partials": "/ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/temp/767bb681-6977-4bde-b753-4d3de4f8e539.csv"
                },
                "scores": [
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ROC_AUC",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 0.5261892080307007
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "ACCURACY",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 1
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "PRECISION",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 1
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "RECALL",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 1
                            }
                        }
                    },
                    {
                        "fold": 0,
                        "metric": {
                            "k": 0,
                            "metric": "F1",
                            "posLabel": ""
                        },
                        "randomSeed": 0,
                        "value": {
                            "raw": {
                                "double": 1
                            }
                        }
                    }
                ],
                "sent_to_user": true,
                "status": "COMPLETE",
                "systemId": "d3m"
            }
        },
        "h2o": {
            "4543ebec-75db-456e-b96a-915a2a442685": {
                "description": "stackedensemble-unsupervised",
                "model": "stackedensemble-unsupervised",
                "model_id": "4543ebec-75db-456e-b96a-915a2a442685",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a8f6de0f-5242-4f2f-a3c7-2cad0cf90854.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/50f84b8d-b697-4d31-94a9-e0aa81a29868.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a0f04225-7a32-475a-ad41-45cdf8e73f59.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5f15c752-4b03-44bf-a428-6e43e453bf03.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/fc0e5e3d-aa3f-48de-923b-88697bd6a7c8.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/36cc7f51-187b-423c-b53a-13e7f6b40779.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.6208605755797709
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9477285166940339
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.13291139240506328
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.28
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.18025751072961374
                    }
                ],
                "search_id": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
                "system": "h2o"
            },
            "5dad8702-76fd-4e54-9811-3358c2eb20bd": {
                "description": "drf-unsupervised",
                "model": "drf-unsupervised",
                "model_id": "5dad8702-76fd-4e54-9811-3358c2eb20bd",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/1711c3e6-8eb2-49d5-b302-fcf75f1c9e27.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/862f5df3-c6cc-4220-b17f-5e0f0e413e61.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/76d0a957-7af0-49ac-af21-bb6175b1c95c.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/69bb5450-a701-4a9a-a9c1-b268a502e18c.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/dc0446bd-62cc-44aa-8cbf-b0005aaabc18.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d9f6ce29-a467-49b5-ad2e-a21a33863dad.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/61c26130-35b3-479b-a2f5-b608defd74b4.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9adabf26-edc2-415d-b4f7-1f1788f8eab9.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.8832634814193909
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9950738916256158
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9913793103448276
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.7666666666666667
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.8646616541353382
                    }
                ],
                "search_id": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
                "system": "h2o"
            },
            "77365e86-6be0-47d4-8728-0613da930635": {
                "description": "stackedensemble-unsupervised",
                "model": "stackedensemble-unsupervised",
                "model_id": "77365e86-6be0-47d4-8728-0613da930635",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/42a9becb-24fc-4b1a-a84a-5ef4a7418269.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/339d60a9-de91-426d-881c-627cc62bbf40.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7fecba6b-3d68-4480-9ab1-53c715f287e3.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b74dc0d6-8c23-4c12-935a-0e0fbdba86a2.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/79d809bf-2f3c-4a28-a811-0dc18e575735.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/54977c5e-0369-4237-8900-a8e3eb1583a3.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.7075803297010339
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9002463054187192
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.1039671682626539
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5066666666666667
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.17253121452894438
                    }
                ],
                "search_id": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
                "system": "h2o"
            },
            "80269426-b04a-4471-92c5-adb7c2da0557": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "80269426-b04a-4471-92c5-adb7c2da0557",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/8a3bb951-7b6d-4aba-8920-31bf28d61487.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4b12333d-6097-4e9f-a6d0-c3fe1ff14b93.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/811f8197-cd42-4df4-85a6-2d28dd8f083f.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/c42cb676-dd5d-4b31-96b2-d758fbb91057.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/1cb3e648-5e48-402c-8d7a-36b5966c2ed8.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f64991ad-bc7d-4562-a188-db517ad0eedf.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b7756fc3-20cd-464b-8620-8b7ecf5814b4.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ea992c2c-b9b1-4a22-bc21-d52176b8e8ca.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5935931824531993
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9774220032840722
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.3972602739726027
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.19333333333333333
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.26008968609865474
                    }
                ],
                "search_id": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
                "system": "h2o"
            },
            "86b3542f-eaa5-40a6-b979-29a947af3770": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "86b3542f-eaa5-40a6-b979-29a947af3770",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/31bac832-97cf-4b8f-9e3a-cfd4ac8166a8.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/0c4595b0-b8ad-46fa-be57-3b046b8b9e14.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/c8097387-eb29-44be-acd9-454f161b5f9d.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5e06c30c-1707-4d12-bcf3-199aac8d26c6.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a282b78c-2cf2-414a-9805-9099abd2563c.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9950a29b-db24-4aa6-b372-9478d381655b.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/c9764495-ef8f-47f0-917f-904cb696f090.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4e12a8b8-8063-4541-93fb-6e1e3ee0086b.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.610220732048058
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9652435686918446
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.20454545454545456
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.24
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.22085889570552147
                    }
                ],
                "search_id": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
                "system": "h2o"
            },
            "adbea335-502e-4f8b-b644-2cdf5565ea69": {
                "description": "glm-unsupervised",
                "model": "glm-unsupervised",
                "model_id": "adbea335-502e-4f8b-b644-2cdf5565ea69",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ea042100-aeb1-47dc-b89e-b29a38d4423d.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/1070bb92-dd20-4f57-b58c-e7bc9049ff5f.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/500c516d-ff45-477c-8673-8f3d4c504fab.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/1db99d5c-ff94-4d01-a045-0576b5e978ca.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/8fd36b0b-ca32-4dd6-9d01-96ee007c8754.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/19af2462-fac0-43e1-838b-ed903eabfdd0.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.6072897457390333
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9147509578544061
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.07692307692307693
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.2866666666666667
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.12129760225669958
                    }
                ],
                "search_id": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
                "system": "h2o"
            },
            "b98bb375-44a6-463f-8710-5901186f824c": {
                "description": "xgboost-unsupervised",
                "model": "xgboost-unsupervised",
                "model_id": "b98bb375-44a6-463f-8710-5901186f824c",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/a805e53d-d15a-413a-87f6-e53df6fcc451.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/90ef53b2-655a-4f5c-958e-ef4e7fc330c5.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/3a722c1e-1e83-48bb-b8c2-565e39f03e9f.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/cc6ed681-fe19-4438-9c5b-1f782a464858.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f884ac64-a13c-4c45-8aec-db12d897bac2.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b544189d-0526-4848-9645-1c888e32acbf.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/916a8736-f401-4d5e-bbee-a662f2408a53.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ed201d98-b9ba-4013-87d4-549ff4ffefbc.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.6556496227996648
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9711275314723591
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.3081761006289308
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.32666666666666666
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.31715210355987056
                    }
                ],
                "search_id": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
                "system": "h2o"
            }
        },
        "mlbox": {
            "47bc62f5-d850-4b94-a819-5be339818f16": {
                "description": "DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,\n            max_features=None, max_leaf_nodes=None,\n            min_impurity_decrease=0.0, min_impurity_split=None,\n            min_samples_leaf=1, min_samples_split=2,\n            min_weight_fraction_leaf=0.0, presort=False, random_state=0,\n            splitter='best')",
                "model": "DecisionTreeClassifier",
                "model_id": "47bc62f5-d850-4b94-a819-5be339818f16",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9ecbfefe-69d2-4ac0-9cab-b52ff0a00596.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/5a2f359c-e891-4d32-9d03-b2bf3936234e.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f3c0d3dd-5566-4747-848f-ff092603760d.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/0d58e40c-9a90-403a-918f-56ce8ab0c6fb.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d7f6ea60-ba64-4319-a892-94a01a2f6650.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/508a1f50-9c01-4617-af6a-4c371f2f46c0.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f134267d-4c7a-4df7-9767-d3b561b2daeb.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/83e6acae-18a4-4aec-bf2d-b61f152bfad5.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5003762829386951
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9036618754277892
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0.028022656446829882
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0.07619536520973892
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0.03842308151781542
                    }
                ],
                "search_id": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
                "system": "mlbox"
            },
            "5b03c283-fa7e-434a-9dca-ba64174866da": {
                "description": "LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=0.8,\n        importance_type='split', learning_rate=0.05, max_depth=-1,\n        min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n        n_estimators=500, n_jobs=-1, nthread=-1, num_leaves=31,\n        objective=None, random_state=None, reg_alpha=0.0, reg_lambda=0.0,\n        seed=0, silent=True, subsample=0.9, subsample_for_bin=200000,\n        subsample_freq=0)",
                "model": "LGBMClassifier",
                "model_id": "5b03c283-fa7e-434a-9dca-ba64174866da",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d586a3c7-393b-4033-a895-d5a452bf5324.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e8d8b172-5d97-48aa-86dc-f9fa52742ab9.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/aa90d905-3918-4eac-9ddd-a2640490644e.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/77a1db5c-9a5e-401a-b40d-056a29dd8edf.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/775fe305-522c-4535-99d7-e06c42dbdfee.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/fb99ee7e-e79e-4c5d-a13b-8761331cc505.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/6370c95d-f1fb-4b5a-9d77-ba22d7b2eeca.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/06444fd4-ce91-43ed-b3ea-e947498f1ebc.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.49429869591844094
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.964236824093087
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
                "system": "mlbox"
            },
            "73bba463-4d19-41dc-9404-9764a6dff76e": {
                "description": "AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None,\n          learning_rate=0.05, n_estimators=400, random_state=0)",
                "model": "AdaBoostClassifier",
                "model_id": "73bba463-4d19-41dc-9404-9764a6dff76e",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/51850364-ee12-4fe6-9ef0-22cd9f3af0b0.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/78ffd93f-5050-4f5d-93b0-2cd9f2b8340f.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/598179fe-797b-493a-b838-20ea9f259a26.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/dd5079c4-ff3d-44cf-b269-f116c23b4760.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/794caa57-3f8d-4010-ae14-49ad021fbd47.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/37c32d02-a73e-4a92-92b9-859653a1f9af.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/26c75aa8-181c-48ea-a38e-23730b53a363.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/9ec4bb1c-cd82-4606-9620-1c37dc65da6e.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9753593429158111
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
                "system": "mlbox"
            },
            "a69ed2e8-dfbe-4cd5-ae82-8dfd401d6450": {
                "description": "RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n            max_depth=10, max_features='sqrt', max_leaf_nodes=None,\n            min_impurity_decrease=0.0, min_impurity_split=None,\n            min_samples_leaf=1, min_samples_split=2,\n            min_weight_fraction_leaf=0.0, n_estimators=400, n_jobs=-1,\n            oob_score=False, random_state=0, verbose=0, warm_start=False)",
                "model": "RandomForestClassifier",
                "model_id": "a69ed2e8-dfbe-4cd5-ae82-8dfd401d6450",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/70753895-3d4d-42f9-9ce9-5e1fc4cfe578.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/60bae9d5-ef71-4b83-800d-9c428ed0a161.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/fb213970-bdb0-47d7-afa7-5deca1130aca.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/80ae0780-1159-4231-8f2b-56c89ed72df9.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/3cb21233-0543-4638-8086-81a99861e0df.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/417ef67c-8a20-44f3-837b-2ceb737391d0.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d3325524-b873-40ae-8377-45ade6105d71.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/77e8faa6-053f-4100-8493-1c9490ce96f5.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.49859565065984607
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.972621492128679
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
                "system": "mlbox"
            },
            "d2f88f7a-7ab3-4ca5-b499-f5d6aca78577": {
                "description": "LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=-1,\n          penalty='l2', random_state=0, solver='liblinear', tol=0.0001,\n          verbose=0, warm_start=False)",
                "model": "LogisticRegression",
                "model_id": "d2f88f7a-7ab3-4ca5-b499-f5d6aca78577",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/33bc1f0a-388d-4a47-a8c6-28a35ecfb686.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d0e7ff32-6442-418d-8105-325fdd3d9b55.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/41c4bc1b-38a6-4fa6-b8c9-b294350ccf48.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/0f4200aa-e018-4035-8db1-961e33174239.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/8b97f0b9-68c6-4e34-936c-6923220088f2.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/609453b6-e742-4ae1-9279-0213937a0b8b.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/596b8520-8dd3-4912-8bb9-24defa180475.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7c508c2e-ef7c-4dff-bbff-c3a2d859f7f3.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9753593429158111
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
                "system": "mlbox"
            },
            "db495c30-b0d0-42fc-918a-7773297b93e7": {
                "description": "BaggingClassifier(base_estimator=None, bootstrap=False,\n         bootstrap_features=False, max_features=0.85, max_samples=0.9,\n         n_estimators=500, n_jobs=-1, oob_score=False, random_state=0,\n         verbose=0, warm_start=False)",
                "model": "BaggingClassifier",
                "model_id": "db495c30-b0d0-42fc-918a-7773297b93e7",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/bf81c0f1-e84e-40d5-af23-3e900c862692.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/888c08a5-263b-408d-a312-975cd5c0e9fe.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/81486ad5-c016-4609-8343-7818eb97af07.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b626017c-36af-45fe-bf1b-fcfb06005a71.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/c129cac0-1af2-4340-a208-de8a80ecebb8.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ccf45ef1-4952-4bfa-8446-2816a1da9b2f.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/97269829-c05c-4e5c-bc59-ca6281443c0e.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4e719694-b1cc-41ba-9cd1-fb932fb7175a.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.4932442331015766
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9621834360027378
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
                "system": "mlbox"
            },
            "e0b7963d-00cb-48a2-8008-3391d0ec3074": {
                "description": "ExtraTreesClassifier(bootstrap=True, class_weight=None, criterion='gini',\n           max_depth=10, max_features='sqrt', max_leaf_nodes=None,\n           min_impurity_decrease=0.0, min_impurity_split=None,\n           min_samples_leaf=1, min_samples_split=2,\n           min_weight_fraction_leaf=0.0, n_estimators=400, n_jobs=-1,\n           oob_score=False, random_state=0, verbose=0, warm_start=False)",
                "model": "ExtraTreesClassifier",
                "model_id": "e0b7963d-00cb-48a2-8008-3391d0ec3074",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/829a84a0-3aba-4ba2-b4cb-eb3c554b91b7.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/16ec4ad5-9aee-4455-b356-34e346666c86.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/90a5c0cf-30b6-48dc-871b-304a7286e9bf.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/399f85a1-ef46-4d94-b5e1-ff691869581e.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/103276d5-99e1-4e9c-8020-44258d02bdee.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/fb3d1a6d-3dad-4e74-b083-85c34ccf478c.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/be52f312-4e98-4e54-8e61-f5fd5432c404.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/395599e7-40d5-45b3-923c-deb5b91f847e.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.4992975251269859
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.973990417522245
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
                "system": "mlbox"
            }
        },
        "mljar-supervised": {
            "7a6ac283-d093-40a9-9752-ebbdce7899bd": {
                "description": "<supervised.models.ensemble.Ensemble object at 0x7f049c189860>",
                "model": "Ensemble",
                "model_id": "7a6ac283-d093-40a9-9752-ebbdce7899bd",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/19c5850e-5756-4874-affd-e4a8ba3b459d.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/29ef9cfd-3b48-4b37-873a-8e0b890f9a5f.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/aee384a0-66e0-4008-873e-5ab55bfd4da3.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/7dfeb74e-70b1-4017-851a-c5abc7aab1dd.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/20df1edc-b3f9-492a-868e-38d1737f141d.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/17fb678e-3611-458d-8fc6-049bd15c96bc.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "search_id": "38d4eb35-2c54-4ad0-88e3-d76440e47ebd",
                "system": "mljar-supervised"
            },
            "a7eb93dd-f391-4e03-b222-7445c627d0d3": {
                "description": "<supervised.iterative_learner_framework.IterativeLearner object at 0x7f05a8779048>",
                "model": "CatBoost",
                "model_id": "a7eb93dd-f391-4e03-b222-7445c627d0d3",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/38fec914-269a-4a77-bfaf-fa7536424891.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d10121c2-8087-4256-8ab3-f46b4e5206f5.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/3f09d15e-6e3f-46f4-a2e3-268f91d4b089.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/c0d9ca01-cb26-40a4-b9b4-a2721c428e3a.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/452383e5-3a71-4b28-89c5-a2d9b1a84105.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/ba7e4c86-5a40-4a4f-bb5c-8655483435d4.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2409f1e5-5c41-456a-be48-316ee5ff96ee.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/806ee990-bf52-48dd-ab0c-3e90575bf1c0.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9753593429158111
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "38d4eb35-2c54-4ad0-88e3-d76440e47ebd",
                "system": "mljar-supervised"
            },
            "c0e08000-dfd3-4287-9022-e5ae79690e6b": {
                "description": "<supervised.iterative_learner_framework.IterativeLearner object at 0x7f0497647a58>",
                "model": "CatBoost",
                "model_id": "c0e08000-dfd3-4287-9022-e5ae79690e6b",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/70c96140-7b11-4b66-8dd9-0e60e5ab4bff.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f7d6b25f-b39e-4c2c-9e9d-01e06e9b9ee3.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4b63de85-c15f-4d70-9a95-ef17f8e95844.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/0b7d8a58-addd-4622-8cd8-b5aa1ef001b1.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4471c30c-d0e6-4a2c-8b0b-ada9a7d1abf7.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/99027b19-2cac-4745-a185-3207f077f334.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/4121e425-58b7-4263-9a86-7a2a509cd31d.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/8709fb6f-6d09-4fb5-9635-c039c9544a52.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9753593429158111
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "38d4eb35-2c54-4ad0-88e3-d76440e47ebd",
                "system": "mljar-supervised"
            },
            "f8f9a502-a288-4307-9515-6e7e8afe7f84": {
                "description": "<supervised.iterative_learner_framework.IterativeLearner object at 0x7f05a8779c50>",
                "model": "CatBoost",
                "model_id": "f8f9a502-a288-4307-9515-6e7e8afe7f84",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/349b3fc3-0417-425b-a2bf-77939089f01c.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/2f1b96ac-4a1c-4730-b8a4-36b8eb420cb1.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/39a5ccfa-ab35-4eff-b110-56167186b3be.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/31e980dc-13d9-48fa-8d5b-355997954114.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d4f53215-5f85-4dc7-9b31-963b58ddf8cd.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/64e67a0c-b501-4c31-b4a8-252056bb5726.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/f46f18c3-e2f2-4516-9649-a6a8d8c7aabd.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/0ce17a4c-090c-44ef-8844-bd15d4eaa395.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9753593429158111
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "38d4eb35-2c54-4ad0-88e3-d76440e47ebd",
                "system": "mljar-supervised"
            }
        },
        "tpot": {
            "4ffd2e89-8183-48d3-b580-525731f5e0c6": {
                "description": "Pipeline(memory=None,\n     steps=[('xgbclassifier', XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n       colsample_bytree=1, gamma=0, learning_rate=0.01, max_delta_step=0,\n       max_depth=9, min_child_weight=20, missing=None, n_estimators=100,\n       n_jobs=1, nthread=1, objective='binary:logistic', random_state=0,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n       silent=True, subsample=0.7000000000000001))])",
                "model": "Pipeline",
                "model_id": "4ffd2e89-8183-48d3-b580-525731f5e0c6",
                "produce": [
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/3ed7d461-e69d-433d-b3c2-27a8a185402f.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/1a3c538d-d246-4f04-b40f-db5029d38c6d.csv",
                        "input": {
                            "name": "all",
                            "resource_uri": "file:///ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/dataset_TRAIN/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/b85ab974-6467-4a44-ad04-a4e5ae9c20d4.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/d199bee7-fc57-49af-bf21-561bf39964bd.csv",
                        "input": {
                            "name": "test",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/test/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/3670c28a-445c-4a0f-93b8-91055f1d7822.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/50e5ec10-0f97-48cb-929f-eccca796c8b6.csv",
                        "input": {
                            "name": "train",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/train/ws_531/2019-11-13_04-28-34/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "RAW"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/e9a6c2a2-a543-4d33-8c6e-43ba0e6c6867.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    },
                    {
                        "configuration": {
                            "predict_type": "PROBABILITIES"
                        },
                        "data_pointer": "/ravens_volume/solvers/produce/494539ee-d0c2-40c0-a65f-cfd6cc020b55.csv",
                        "input": {
                            "name": "partials",
                            "resource_uri": "file:///ravens_volume/test_output/TR10e_Chen_Ulf_Political_Opportunity/additional_inputs/partials/ws_531/2019-11-13_04-28-33/tables/learningData.csv"
                        }
                    }
                ],
                "scores": [
                    {
                        "metric": {
                            "metric": "ROC_AUC"
                        },
                        "target": "nvc.start.1",
                        "value": 0.5
                    },
                    {
                        "metric": {
                            "metric": "ACCURACY"
                        },
                        "target": "nvc.start.1",
                        "value": 0.9753593429158111
                    },
                    {
                        "metric": {
                            "metric": "PRECISION"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "RECALL"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    },
                    {
                        "metric": {
                            "metric": "F1"
                        },
                        "target": "nvc.start.1",
                        "value": 0
                    }
                ],
                "search_id": "10ab6a7a-a8fb-4520-906b-15dc83bc1da3",
                "system": "tpot"
            }
        }
    },
    "solverState": {
        "d3m": {
            "message": "searching for solutions",
            "searchId": "1",
            "thinking": true
        },
        "h2o": {
            "elapsed_time": 76.93687605857849,
            "message": "search complete",
            "searchId": "c30f6e78-8ffe-481d-bdc1-ce9c9bb1c136",
            "thinking": false
        },
        "mlbox": {
            "elapsed_time": 100.53300094604492,
            "message": "search complete",
            "searchId": "43f89408-e443-4ae3-9c5b-b5c8029aad16",
            "thinking": false
        },
        "mljar-supervised": {
            "elapsed_time": 548.6588890552521,
            "message": "search complete",
            "searchId": "38d4eb35-2c54-4ad0-88e3-d76440e47ebd",
            "thinking": false
        },
        "tpot": {
            "elapsed_time": 52.65382528305054,
            "message": "search complete",
            "searchId": "10ab6a7a-a8fb-4520-906b-15dc83bc1da3",
            "thinking": false
        }
    },
    "splitOptions": {
        "outOfSampleSplit": true,
        "splitsDir": "/ravens_volume/test_data/TR10e_Chen_Ulf_Political_Opportunity/TRAIN/problem_TRAIN",
        "splitsFile": "sampleSplits.csv",
        "stratified": true,
        "trainTestRatio": 0.35
    },
    "subTask": "binary",
    "system": "solved",
    "tags": {
        "crossSection": [],
        "loose": [],
        "nominal": [],
        "time": [],
        "transformed": [],
        "weights": []
    },
    "targets": [
        "nvc.start.1"
    ],
    "task": "classification",
    "unedited": true
}